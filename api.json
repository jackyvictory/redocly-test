{
  "openapi": "3.0.3",
  "info": {
    "title": "EVO Cloud API test",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://bkk-uat-online.everonet.com"
    },
    {
      "url": "https://hkg-uat-online.everonet.com"
    },
    {
      "url": "https://sgp-uat-online.everonet.com"
    },
    {
      "url": "https://tyo-uat-online.everonet.com"
    }
  ],
  "components": {
    "securitySchemes": {}
  },
  "security": [
    {}
  ],
  "paths": {
    "/g2/v0/payment/mer/{sid}/evo.e-commerce.paymentMethod": {
      "post": {
        "summary": "/paymentMethod",
        "description": "Call this API to create a token.",
        "operationId": "paymentmethod_post",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "merchantTransInfo",
                  "paymentMethod"
                ],
                "properties": {
                  "authentication": {
                    "type": "object",
                    "description": "The cardholder authentication information.",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "The purpose of the current PUT payment method request. An enumerated value. [ResendSMS]: Mandatory when the front end needs to resend SecurePlus SMS. Max for 50."
                      },
                      "mobilePhone": {
                        "type": "string",
                        "description": "The cardholder mobile number, used for SecurePlus authentication. Max for 16."
                      },
                      "returnUrl": {
                        "type": "string",
                        "description": "The callback address after authentication has completed. Mandatory under 3DS authentication and LSS authentication scenarios. Max for 300."
                      },
                      "lss": {
                        "type": "object",
                        "description": "The LSS authentication information. The authentication result parameters can be submitted directly during payment if you already have.",
                        "properties": {
                          "lssData": {
                            "type": "object",
                            "description": "The LSS authentication data.",
                            "required": [
                              "eci"
                            ],
                            "properties": {
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              },
                              "lsav": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              }
                            }
                          },
                          "encryptedAuthResponse": {
                            "type": "string",
                            "description": "The encrypted authentication message back to the merchant back URL by LSS DS. Max for 2048."
                          }
                        }
                      },
                      "securePlus": {
                        "type": "object",
                        "description": "The secureplus authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                        "properties": {
                          "securePlusData": {
                            "type": "object",
                            "description": "The secureplus authentication data. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "authenticationResultCode",
                              "vcode"
                            ],
                            "properties": {
                              "authenticationResultCode": {
                                "type": "string",
                                "description": "The raw result of the authentication check. Max for 2."
                              },
                              "vcode": {
                                "type": "string",
                                "description": "The verification code received from UPOP. Max for 2048."
                              }
                            }
                          },
                          "smsCode": {
                            "type": "string",
                            "description": "Mandatory when POST payment is answered with result.code = S0004 and action = VerifySMSCode. Max for 6."
                          }
                        }
                      },
                      "threeDS": {
                        "type": "object",
                        "description": "Mandatory when the desired authentication method is 3DS.",
                        "required": [
                          "deviceType"
                        ],
                        "properties": {
                          "authenticationType": {
                            "type": "string",
                            "description": "Expected 3DS authentication mode, below values are acceptable. \"threeDSPage\": 3DS authentication with single page jump; \"threeDSIntegrator\": API integrated 3DS certification. If you don’t send it, the default is \"threeDSPage\""
                          },
                          "deviceType": {
                            "type": "string",
                            "description": "'Web' 'iOS' 'Android'"
                          },
                          "shopperIP": {
                            "type": "string",
                            "description": "The shopper's IP address. Max for 64."
                          },
                          "shopperEmail": {
                            "type": "string",
                            "description": "The shopper‘s email address. Max for 254."
                          },
                          "origin": {
                            "type": "string",
                            "description": "The URL of the page where you are loading the 3D Secure 2 Component from. The origin should not include subdirectories and a trailing slash. You can also get this by opening the browser console and calling window.location.origin. Mandatory if deviceType = Web."
                          },
                          "mpiData": {
                            "type": "object",
                            "description": "The 3DS authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "cavv",
                              "eci"
                            ],
                            "properties": {
                              "cavv": {
                                "type": "string",
                                "description": "The cavv. Max for 28."
                              },
                              "cavvAlgorithm": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. Max for 1."
                              },
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. The transaction identifier in a decoded form assigned by the directory server. Max for 20."
                              },
                              "dsTransID": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. Max for 36."
                              },
                              "threeDSVersion": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. The current version supported is 2.1.0. Max for 10."
                              }
                            }
                          },
                          "redirectData": {
                            "type": "object",
                            "properties": {
                              "pAres": {
                                "type": "string",
                                "description": "The pares data. The issuer bank's authentication page will return this value when the shopper finished the ChallengeShoper process. Mandatory when threeDSFinished=Y in the request message and get response with code = S0005, action = RedirectShopper in POST payment method. Max for 300."
                              },
                              "threeDSComplnd": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with code = S0005 and action = IdentifyShopper."
                              },
                              "threeDSFinished": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with result.code = S0005 and action = RedirectShopper or ChallengeShopper."
                              }
                            }
                          }
                        }
                      },
                      "browserInfo": {
                        "type": "object",
                        "description": "The user browser information for 3DS authentication, which will be passed to HiTRUST.",
                        "required": [
                          "acceptHeader",
                          "colorDepth",
                          "javaEnabled",
                          "language",
                          "screenHeight",
                          "screenWidth",
                          "timeZoneOffset",
                          "userAgent"
                        ],
                        "properties": {
                          "acceptHeader": {
                            "type": "string",
                            "description": "The accept header value of consumer browser. Max for 2048."
                          },
                          "colorDepth": {
                            "type": "string",
                            "description": "The color depth of the shopper's browser, in pixels. Use the screen .colorDepth property of the browser to get the value. Accepted value: 1,4,8,15,16,24,32 or 48 bits. Max for 2."
                          },
                          "javaEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute Java."
                          },
                          "javaScriptEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present."
                          },
                          "language": {
                            "type": "string",
                            "description": "The value that represents the browser language defined in IETF BCP47, returned from the navigator.language property. Examples: NL , FR , US. Max for 8."
                          },
                          "screenHeight": {
                            "type": "string",
                            "description": "The total height of the cardholder's screen in pixels. The value is returned from the screen.height property. Max for 6."
                          },
                          "screenWidth": {
                            "type": "string",
                            "description": "The total width of the cardholder's screen in pixels. The value is returned from the screen.width property. Max for 6."
                          },
                          "timeZoneOffset": {
                            "type": "string",
                            "description": "The time difference between the UTC time and the local time of the cardholder's browser, in minutes. The value is got from the getTimezoneOffset () method. For example: \"-120\". Max for 5."
                          },
                          "userAgent": {
                            "type": "string",
                            "description": "The user agent value of the shopper's browser. Max for 2048."
                          }
                        }
                      },
                      "accountInfo": {
                        "type": "object",
                        "description": "The shopper account information for 3D Secure 2, which will be passed to HiTRUST.",
                        "required": [
                          "country",
                          "houseNumberOrName",
                          "postalCode",
                          "stateOrProvince"
                        ],
                        "properties": {
                          "accountAgeIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this shopper account has been created. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "accountChangeIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's account was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountCreationDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was created. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's password was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDateIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's password was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "purchasesLast6Months": {
                            "type": "string",
                            "description": "The number of order purchased in the last 6 months. Max for 12."
                          },
                          "addCardAttemptsDay": {
                            "type": "string",
                            "description": "The number of attempts the shopper has tried to add a card to the account in the last day. Max for 12."
                          },
                          "pastTransactionsDay": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past 24 hours. Max for 12."
                          },
                          "pastTransactionsYear": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past year. Max for 12."
                          },
                          "paymentAccountAge": {
                            "type": "string",
                            "description": "The datetime the payment method was added to the shopper's account. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "paymentAccountIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this payment method has been added to the shopper's account. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "deliveryAddressUsageDate": {
                            "type": "string",
                            "description": "The datetime the selected delivery address was last used. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "deliveryAddressUsageIndicator": {
                            "type": "string",
                            "description": "The indicator when this delivery address was last used. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "suspiciousActivity": {
                            "type": "boolean",
                            "description": "Whether any suspicious activity has been recorded on this account."
                          },
                          "homePhone": {
                            "type": "string",
                            "description": "The shopper's home phone number (including the country code). Max for 16."
                          },
                          "mobilePhone": {
                            "type": "string",
                            "description": "The shopper's mobile phone number (including the country code). Max for 16."
                          },
                          "workPhone": {
                            "type": "string",
                            "description": "The shopper's work phone number (including the country code). Max for 16."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          }
                        }
                      },
                      "deliveryAddress": {
                        "type": "object",
                        "description": "The delivery address. Mandatory if HiTRUST is used as the authentication way.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      },
                      "merchantRiskIndicator": {
                        "type": "object",
                        "description": "The additional risk fields for 3D Secure 2. The name of the street will be passed to HiTRUST. Include this in your request whenever available.",
                        "properties": {
                          "addressMatch": {
                            "type": "boolean",
                            "description": "Whether the chosen delivery address is identical to the billing address."
                          },
                          "deliveryEmail": {
                            "type": "string",
                            "description": "The delivery email address (for digital goods). Max for 256."
                          },
                          "deliveryTimeframe": {
                            "type": "string",
                            "description": "The estimated delivery time for the shopper to receive the goods. Allowed values: 'electronicDelivery', 'sameDayShipping', 'overnightShipping' and 'twoOrMoreDaysShipping'."
                          },
                          "giftCardAmount": {
                            "type": "string",
                            "description": "The amount purchased with a prepaid or gift card. Max for 12."
                          },
                          "giftCardCount": {
                            "type": "string",
                            "description": "The number of individual prepaid or gift cards used for this purchase. Max for 12."
                          },
                          "preOrderDate": {
                            "type": "string",
                            "description": "For pre-order purchases, the expected date this product will be available to the shopper. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "preOrderPurchase": {
                            "type": "boolean",
                            "description": "Whether this transaction is for pre-ordering a product."
                          },
                          "reorderItems": {
                            "type": "boolean",
                            "description": "Whether the shopper has already purchased the same items in the past."
                          },
                          "deliveryAddressIndicator": {
                            "type": "string",
                            "description": "The indicator regarding to the delivery address. Allowed values: 'shipToBillingAddress', 'shipToVerifiedAddress', 'shipToNewAddress', 'shipToStore', 'digitalGoods', 'goodsNotShipped' and 'other'."
                          }
                        }
                      },
                      "billingAddress": {
                        "type": "object",
                        "description": "The billing address, which will be passed to HiTRUST.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      }
                    }
                  },
                  "merchantTransInfo": {
                    "type": "object",
                    "description": "The order information.",
                    "required": [
                      "merchantTransID",
                      "merchantTransTime"
                    ],
                    "properties": {
                      "merchantTransID": {
                        "type": "string",
                        "description": "The Merchant Order Number. Should be unique in a store. Max for 32."
                      },
                      "merchantOrderReference": {
                        "type": "string",
                        "description": "The Merchant Order Reference Number. No need to verify uniqueness. Max for 32."
                      },
                      "merchantTransTime": {
                        "type": "string",
                        "description": "Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00.",
                        "format": "date"
                      }
                    }
                  },
                  "storeInfo": {
                    "type": "object",
                    "description": "When a store supports multiple MCCs, specify the MCC used for the order.",
                    "properties": {
                      "MCC": {
                        "type": "string",
                        "description": "The Merchant Category Code. Max for 4."
                      }
                    }
                  },
                  "paymentMethod": {
                    "type": "object",
                    "description": "The payment method information.",
                    "properties": {
                      "tokenValidDays": {
                        "type": "string",
                        "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                      },
                      "payerReference": {
                        "type": "string",
                        "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                      },
                      "vaultID": {
                        "type": "string",
                        "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                      },
                      "type": {
                        "type": "string",
                        "description": "The payment method type. Enumerated value: 'card', 'e-wallet', 'token'."
                      },
                      "paymentBrand": {
                        "type": "string",
                        "description": "The payment brand. Enumerated value. Alipay: Alipay CN WeChat_Pay: WeChat Pay. Mandatory when paymentMethod=e-wallet"
                      },
                      "planID": {
                        "type": "string",
                        "description": "The auto debit template id. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "subOpenID": {
                        "type": "string",
                        "description": "WeChat pay use ID. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "authCode": {
                        "type": "string",
                        "description": "The authorization code used when signing a deduction. Max for 64."
                      },
                      "card": {
                        "type": "object",
                        "description": "If Type = 'card', the field is needed to be sent, which means that the paymentMethod to be bound is the card. For PUT /paymentMethod, Usage 1: If you want to update the card information corresponding to the token, you need to send this field Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                        "properties": {
                          "encryptedCardInfo": {
                            "type": "string",
                            "description": "The encrypted card information. It is needed to be spliced into JSON character string with card number, validity period and security code before encryption, and then the character string is encrypted as a whole. Step 1: The spliced json character string: [\"cardNumber\":\"1234123412341234\", \" expiryDate\": \"0724\", \"cvc\":\"123\", \"holderName\":\"Bob\"]. Step 2: Encrypt the character string using the RSA public key of the organization/store level. Step 3: Put the cipher text into this field When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Max for 2048."
                          },
                          "cardInfo": {
                            "type": "object",
                            "description": "Usage 1: The card information structure for transmitting unencrypted text card information. When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Usage 2: (For PUT /paymentMethod) Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                            "required": [
                              "cardNumber"
                            ],
                            "properties": {
                              "cardNumber": {
                                "type": "string",
                                "description": "The card number. Max for 19."
                              },
                              "expiryDate": {
                                "type": "string",
                                "description": "The validity YYMM. No need to send if UPI debit card transactions. Max for 4."
                              },
                              "cvc": {
                                "type": "string",
                                "description": "The security code. Max for 4."
                              },
                              "holderName": {
                                "type": "string",
                                "description": "The cardholder's name. Max for 50."
                              }
                            }
                          },
                          "tokenize": {
                            "type": "boolean",
                            "description": "Whether to generate token. If the value is true, use the card information and generate the token."
                          },
                          "tokenValidDays": {
                            "type": "string",
                            "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                          },
                          "payerReference": {
                            "type": "string",
                            "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                          }
                        }
                      },
                      "token": {
                        "type": "object",
                        "description": "If Type = 'token', the field is needed to be sent, which means that the paymentMethod to be bound is the token.",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The token value. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The vaultID of the token group. Max for 36."
                          }
                        }
                      },
                      "e-wallet": {
                        "type": "object",
                        "description": "If Type = 'e-wallet', the field is needed to be sent, which means that the paymentMethod to be bound is the e-wallet.",
                        "required": [
                          "paymentBrand"
                        ],
                        "properties": {
                          "paymentBrand": {
                            "type": "string",
                            "description": "The payment brand. Enumerated value. Alipay: Alipay CN AlipayHK: AlipayHK WeChat_Pay: WeChat Pay TrueMoney: TrueMoney TNG: Touch 'n Go GCash: GCash DANA: DANA bKash: bKash Kakao_Pay: Kakao Pay Easypaisa: Easypaisa"
                          },
                          "subOpenID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET or MINI. Max for 64."
                          },
                          "subAppID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET, MINI or APP. Max for 64."
                          }
                        }
                      }
                    }
                  },
                  "transInitiator": {
                    "type": "object",
                    "description": "Request origination platform. Mandatory when paymentMethod.type=e-wallet",
                    "required": [
                      "platform"
                    ],
                    "properties": {
                      "platform": {
                        "type": "string",
                        "description": "WEB: PC browser; WAP: Mobile phone browser; APP: Mobile APP; MINI: Mini Program; INWALLET: In-wallet browser"
                      },
                      "spec": {
                        "type": "string",
                        "description": "The browser version. Max for 30."
                      },
                      "appVersion": {
                        "type": "string",
                        "description": "The APP version. Max for 20."
                      },
                      "deviceType": {
                        "type": "string",
                        "description": "The terminal type: 'Android' or 'iOS'."
                      },
                      "userCreateIp": {
                        "type": "string",
                        "description": "The IP address of the terminal where the user initiates the transaction Mandatory when paymentBrand = WeChat Pay and platform = WAP. Max for 64."
                      },
                      "osVersion": {
                        "type": "string",
                        "description": "Operating system version. Max for 20."
                      }
                    }
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "The remark information. Max for 512."
                  },
                  "returnUrl": {
                    "type": "string",
                    "description": "Callback address after successful auto debit signing. Mandatory when paymentBrand=Alipay"
                  }
                }
              },
              "examples": {
                "Card 3DS Page": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108121628768430783",
                      "merchantTransTime": "2021-08-12T19:40:30+08:00"
                    },
                    "paymentMethod": {
                      "payerReference": "Your identification",
                      "vaultID": "20210804",
                      "type": "card",
                      "card": {
                        "cardInfo": {
                          "cardNumber": "6011000000001093",
                          "expiryDate": "2407",
                          "cvc": 86
                        },
                        "tokenize": true
                      }
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "returnUrl": "http://www.cardinfolink.com",
                    "webhook": "https://64012512-b819-46d5-80ee-bebd40cc3806.mock.pstmn.io"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"authentication\": {\n        \"authenticationType\": \"CYBS\",\n        \"threeDS\": {\n            \"redirectUrl\": \"https://counter-test.everonet.com/3ds?YWNjZXNzVG9rZW49YTBlYTMyY2RlZjk0NDNhMmQ4NDFlMzhjODAyZDJmMDAmaW5zQ29kZT0xMDEzMDAxMCZvcmRlck51bT1UMTA4MTIxNjI4NzY4NDMwNzgzJnN0b3JlTnVtPVMwNTk3NTgmQ0NBPWg2NmVHbHkrRS9yZzgxLzFsdFQ2d1RWTnMzdzhDZUJ3M1ZKK3A0L1VmQm9zQkh0SGhmalRrU2M4N0JGSCtrVXo0Ri84dG96YmlCTDhmb2k2WDVvNlA5RW4yZlRUdzV2VmtkMWd6d3gvRVBXTUt5N29vT2tXQ2RMZHBXWUNleDhwdkNYSVpKcDNTelpJZnNrSk9kSjBDN3hGVytZZGU0bWlKejZlbkh0K1RFWHR6bERod2k0aDUzd2JibWJtT3d5SXdhcTV1ODZrRzU0T1AxNENIUVIveUZNK3dMb3RNcGYzb0xpaDQ5L3FVV1ZBMlIxMVBNK2F1VFE5Z21jVCtoK2dJVWI1azB6b04vWFkveWZZaVN2dm5KRS9PcDBlcVd1QVhtalMwZ2lOcFdXTGFzMlBJZnIxU1d4cURDK3E1NW51T3cxeGVxdW43OEVTRCt3ZjVqRHNpUT09JnJldHVyblVybD1hSFIwY0RvdkwzZDNkeTVqWVhKa2FXNW1iMnhwYm1zdVkyOXQ=\"\n        }\n    },\n    \"result\": {\n        \"action\": \"RedirectShopper\",\n        \"code\": \"S0005\",\n        \"message\": \"3DS authentication required\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "authenticationType": {
                          "type": "string",
                          "example": "CYBS"
                        },
                        "threeDS": {
                          "type": "object",
                          "properties": {
                            "redirectUrl": {
                              "type": "string",
                              "example": "https://counter-test.everonet.com/3ds?YWNjZXNzVG9rZW49YTBlYTMyY2RlZjk0NDNhMmQ4NDFlMzhjODAyZDJmMDAmaW5zQ29kZT0xMDEzMDAxMCZvcmRlck51bT1UMTA4MTIxNjI4NzY4NDMwNzgzJnN0b3JlTnVtPVMwNTk3NTgmQ0NBPWg2NmVHbHkrRS9yZzgxLzFsdFQ2d1RWTnMzdzhDZUJ3M1ZKK3A0L1VmQm9zQkh0SGhmalRrU2M4N0JGSCtrVXo0Ri84dG96YmlCTDhmb2k2WDVvNlA5RW4yZlRUdzV2VmtkMWd6d3gvRVBXTUt5N29vT2tXQ2RMZHBXWUNleDhwdkNYSVpKcDNTelpJZnNrSk9kSjBDN3hGVytZZGU0bWlKejZlbkh0K1RFWHR6bERod2k0aDUzd2JibWJtT3d5SXdhcTV1ODZrRzU0T1AxNENIUVIveUZNK3dMb3RNcGYzb0xpaDQ5L3FVV1ZBMlIxMVBNK2F1VFE5Z21jVCtoK2dJVWI1azB6b04vWFkveWZZaVN2dm5KRS9PcDBlcVd1QVhtalMwZ2lOcFdXTGFzMlBJZnIxU1d4cURDK3E1NW51T3cxeGVxdW43OEVTRCt3ZjVqRHNpUT09JnJldHVyblVybD1hSFIwY0RvdkwzZDNkeTVqWVhKa2FXNW1iMnhwYm1zdVkyOXQ="
                            }
                          }
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "example": "RedirectShopper"
                        },
                        "code": {
                          "type": "string",
                          "example": "S0005"
                        },
                        "message": {
                          "type": "string",
                          "example": "3DS authentication required"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "/paymentMethod",
        "description": "Call this API to query ​a token.",
        "operationId": "paymentmethod_get",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of paymentMethod. Request URL to query token authentication&generation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "The tokenValue of paymentMethod. Request URL to query token information.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"authentication\": {\n        \"authenticationType\": \"CYBS\"\n    },\n    \"result\": {\n        \"action\": \"RedirectShopper\",\n        \"code\": \"S0005\",\n        \"message\": \"3DS authentication required\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "authenticationType": {
                          "type": "string",
                          "example": "CYBS"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "example": "RedirectShopper"
                        },
                        "code": {
                          "type": "string",
                          "example": "S0005"
                        },
                        "message": {
                          "type": "string",
                          "example": "3DS authentication required"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "/paymentMethod",
        "description": "Call this API to delete ​a token.",
        "operationId": "paymentmethod_delete",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The tokenValue of PaymentMethod.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "reason": {
                    "type": "string",
                    "description": "Auto debit termination reason. Max for 1024."
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "webhook": "https://64012512-b819-46d5-80ee-bebd40cc3806.mock.pstmn.io"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"601100\",\n            \"fundingType\": \"credit\",\n            \"last4No\": \"1093\",\n            \"paymentBrand\": \"Diners\"\n        },\n        \"token\": {\n            \"createTime\": \"2021-08-12T14:57:49.144Z\",\n            \"fingerprint\": \"d437cceafc3441fb208f91bcda2ac0a4\",\n            \"status\": \"disable\",\n            \"updateTime\": \"20210812025749+0000\",\n            \"value\": \"pmt_98ed586336fbeecde88112ae156e5780\",\n            \"vaultID\": \"20210804\"\n        }\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "601100"
                            },
                            "fundingType": {
                              "type": "string",
                              "example": "credit"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "1093"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "Diners"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "createTime": {
                              "type": "string",
                              "example": "2021-08-12T14:57:49.144Z"
                            },
                            "fingerprint": {
                              "type": "string",
                              "example": "d437cceafc3441fb208f91bcda2ac0a4"
                            },
                            "status": {
                              "type": "string",
                              "example": "disable"
                            },
                            "updateTime": {
                              "type": "string",
                              "example": "20210812025749+0000"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_98ed586336fbeecde88112ae156e5780"
                            },
                            "vaultID": {
                              "type": "string",
                              "example": "20210804"
                            }
                          }
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/g2/v0/payment/mer/{sid}/evo.e-commerce.payment": {
      "post": {
        "summary": "/payment",
        "description": "Call this API to create a payment transaction.",
        "operationId": "payment_post",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "merchantTransInfo",
                  "paymentMethod",
                  "transAmount",
                  "transInitiator"
                ],
                "properties": {
                  "authentication": {
                    "type": "object",
                    "description": "The cardholder authentication information.",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "The purpose of the current PUT payment method request. An enumerated value. [ResendSMS]: Mandatory when the front end needs to resend SecurePlus SMS. Max for 50."
                      },
                      "mobilePhone": {
                        "type": "string",
                        "description": "The cardholder mobile number, used for SecurePlus authentication. Max for 16."
                      },
                      "returnUrl": {
                        "type": "string",
                        "description": "The callback address after authentication has completed. Mandatory under 3DS authentication and LSS authentication scenarios. Max for 300."
                      },
                      "lss": {
                        "type": "object",
                        "description": "The LSS authentication information. The authentication result parameters can be submitted directly during payment if you already have.",
                        "properties": {
                          "lssData": {
                            "type": "object",
                            "description": "The LSS authentication data.",
                            "required": [
                              "eci"
                            ],
                            "properties": {
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              },
                              "lsav": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              }
                            }
                          },
                          "encryptedAuthResponse": {
                            "type": "string",
                            "description": "The encrypted authentication message back to the merchant back URL by LSS DS. Max for 2048."
                          }
                        }
                      },
                      "securePlus": {
                        "type": "object",
                        "description": "The secureplus authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                        "properties": {
                          "securePlusData": {
                            "type": "object",
                            "description": "The secureplus authentication data. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "authenticationResultCode",
                              "vcode"
                            ],
                            "properties": {
                              "authenticationResultCode": {
                                "type": "string",
                                "description": "The raw result of the authentication check. Max for 2."
                              },
                              "vcode": {
                                "type": "string",
                                "description": "The verification code received from UPOP. Max for 2048."
                              }
                            }
                          },
                          "smsCode": {
                            "type": "string",
                            "description": "Mandatory when POST payment is answered with result.code = S0004 and action = VerifySMSCode. Max for 6."
                          }
                        }
                      },
                      "threeDS": {
                        "type": "object",
                        "description": "Mandatory when the desired authentication method is 3DS.",
                        "required": [
                          "deviceType"
                        ],
                        "properties": {
                          "authenticationType": {
                            "type": "string",
                            "description": "Expected 3DS authentication mode, below values are acceptable. \"threeDSPage\": 3DS authentication with single page jump; \"threeDSIntegrator\": API integrated 3DS certification. If you don’t send it, the default is \"threeDSPage\""
                          },
                          "deviceType": {
                            "type": "string",
                            "description": "'Web' 'iOS' 'Android'"
                          },
                          "shopperIP": {
                            "type": "string",
                            "description": "The shopper's IP address. Max for 64."
                          },
                          "shopperEmail": {
                            "type": "string",
                            "description": "The shopper‘s email address. Max for 254."
                          },
                          "origin": {
                            "type": "string",
                            "description": "The URL of the page where you are loading the 3D Secure 2 Component from. The origin should not include subdirectories and a trailing slash. You can also get this by opening the browser console and calling window.location.origin. Mandatory if deviceType = Web."
                          },
                          "mpiData": {
                            "type": "object",
                            "description": "The 3DS authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "cavv",
                              "eci"
                            ],
                            "properties": {
                              "cavv": {
                                "type": "string",
                                "description": "The cavv. Max for 28."
                              },
                              "cavvAlgorithm": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. Max for 1."
                              },
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. The transaction identifier in a decoded form assigned by the directory server. Max for 20."
                              },
                              "dsTransID": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. Max for 36."
                              },
                              "threeDSVersion": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. The current version supported is 2.1.0. Max for 10."
                              }
                            }
                          },
                          "redirectData": {
                            "type": "object",
                            "properties": {
                              "pAres": {
                                "type": "string",
                                "description": "The pares data. The issuer bank's authentication page will return this value when the shopper finished the ChallengeShoper process. Mandatory when threeDSFinished=Y in the request message and get response with code = S0005, action = RedirectShopper in POST payment method. Max for 300."
                              },
                              "threeDSComplnd": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with code = S0005 and action = IdentifyShopper."
                              },
                              "threeDSFinished": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with result.code = S0005 and action = RedirectShopper or ChallengeShopper."
                              }
                            }
                          }
                        }
                      },
                      "browserInfo": {
                        "type": "object",
                        "description": "The user browser information for 3DS authentication, which will be passed to HiTRUST.",
                        "required": [
                          "acceptHeader",
                          "colorDepth",
                          "javaEnabled",
                          "language",
                          "screenHeight",
                          "screenWidth",
                          "timeZoneOffset",
                          "userAgent"
                        ],
                        "properties": {
                          "acceptHeader": {
                            "type": "string",
                            "description": "The accept header value of consumer browser. Max for 2048."
                          },
                          "colorDepth": {
                            "type": "string",
                            "description": "The color depth of the shopper's browser, in pixels. Use the screen .colorDepth property of the browser to get the value. Accepted value: 1,4,8,15,16,24,32 or 48 bits. Max for 2."
                          },
                          "javaEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute Java."
                          },
                          "javaScriptEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present."
                          },
                          "language": {
                            "type": "string",
                            "description": "The value that represents the browser language defined in IETF BCP47, returned from the navigator.language property. Examples: NL , FR , US. Max for 8."
                          },
                          "screenHeight": {
                            "type": "string",
                            "description": "The total height of the cardholder's screen in pixels. The value is returned from the screen.height property. Max for 6."
                          },
                          "screenWidth": {
                            "type": "string",
                            "description": "The total width of the cardholder's screen in pixels. The value is returned from the screen.width property. Max for 6."
                          },
                          "timeZoneOffset": {
                            "type": "string",
                            "description": "The time difference between the UTC time and the local time of the cardholder's browser, in minutes. The value is got from the getTimezoneOffset () method. For example: \"-120\". Max for 5."
                          },
                          "userAgent": {
                            "type": "string",
                            "description": "The user agent value of the shopper's browser. Max for 2048."
                          }
                        }
                      },
                      "accountInfo": {
                        "type": "object",
                        "description": "The shopper account information for 3D Secure 2, which will be passed to HiTRUST.",
                        "required": [
                          "country",
                          "houseNumberOrName",
                          "postalCode",
                          "stateOrProvince"
                        ],
                        "properties": {
                          "accountAgeIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this shopper account has been created. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "accountChangeIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's account was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountCreationDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was created. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's password was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDateIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's password was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "purchasesLast6Months": {
                            "type": "string",
                            "description": "The number of order purchased in the last 6 months. Max for 12."
                          },
                          "addCardAttemptsDay": {
                            "type": "string",
                            "description": "The number of attempts the shopper has tried to add a card to the account in the last day. Max for 12."
                          },
                          "pastTransactionsDay": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past 24 hours. Max for 12."
                          },
                          "pastTransactionsYear": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past year. Max for 12."
                          },
                          "paymentAccountAge": {
                            "type": "string",
                            "description": "The datetime the payment method was added to the shopper's account. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "paymentAccountIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this payment method has been added to the shopper's account. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "deliveryAddressUsageDate": {
                            "type": "string",
                            "description": "The datetime the selected delivery address was last used. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "deliveryAddressUsageIndicator": {
                            "type": "string",
                            "description": "The indicator when this delivery address was last used. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "suspiciousActivity": {
                            "type": "boolean",
                            "description": "Whether any suspicious activity has been recorded on this account."
                          },
                          "homePhone": {
                            "type": "string",
                            "description": "The shopper's home phone number (including the country code). Max for 16."
                          },
                          "mobilePhone": {
                            "type": "string",
                            "description": "The shopper's mobile phone number (including the country code). Max for 16."
                          },
                          "workPhone": {
                            "type": "string",
                            "description": "The shopper's work phone number (including the country code). Max for 16."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          }
                        }
                      },
                      "deliveryAddress": {
                        "type": "object",
                        "description": "The delivery address. Mandatory if HiTRUST is used as the authentication way.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      },
                      "merchantRiskIndicator": {
                        "type": "object",
                        "description": "The additional risk fields for 3D Secure 2. The name of the street will be passed to HiTRUST. Include this in your request whenever available.",
                        "properties": {
                          "addressMatch": {
                            "type": "boolean",
                            "description": "Whether the chosen delivery address is identical to the billing address."
                          },
                          "deliveryEmail": {
                            "type": "string",
                            "description": "The delivery email address (for digital goods). Max for 256."
                          },
                          "deliveryTimeframe": {
                            "type": "string",
                            "description": "The estimated delivery time for the shopper to receive the goods. Allowed values: 'electronicDelivery', 'sameDayShipping', 'overnightShipping' and 'twoOrMoreDaysShipping'."
                          },
                          "giftCardAmount": {
                            "type": "string",
                            "description": "The amount purchased with a prepaid or gift card. Max for 12."
                          },
                          "giftCardCount": {
                            "type": "string",
                            "description": "The number of individual prepaid or gift cards used for this purchase. Max for 12."
                          },
                          "preOrderDate": {
                            "type": "string",
                            "description": "For pre-order purchases, the expected date this product will be available to the shopper. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "preOrderPurchase": {
                            "type": "boolean",
                            "description": "Whether this transaction is for pre-ordering a product."
                          },
                          "reorderItems": {
                            "type": "boolean",
                            "description": "Whether the shopper has already purchased the same items in the past."
                          },
                          "deliveryAddressIndicator": {
                            "type": "string",
                            "description": "The indicator regarding to the delivery address. Allowed values: 'shipToBillingAddress', 'shipToVerifiedAddress', 'shipToNewAddress', 'shipToStore', 'digitalGoods', 'goodsNotShipped' and 'other'."
                          }
                        }
                      },
                      "billingAddress": {
                        "type": "object",
                        "description": "The billing address, which will be passed to HiTRUST.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      }
                    }
                  },
                  "merchantTransInfo": {
                    "type": "object",
                    "description": "The order information.",
                    "required": [
                      "merchantTransID",
                      "merchantTransTime"
                    ],
                    "properties": {
                      "merchantTransID": {
                        "type": "string",
                        "description": "The Merchant Order Number. Should be unique in a store. Max for 32."
                      },
                      "merchantOrderReference": {
                        "type": "string",
                        "description": "The Merchant Order Reference Number. No need to verify uniqueness. Max for 32."
                      },
                      "merchantTransTime": {
                        "type": "string",
                        "description": "Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00.",
                        "format": "date"
                      }
                    }
                  },
                  "paymentMethod": {
                    "type": "object",
                    "description": "The payment method information.",
                    "properties": {
                      "tokenValidDays": {
                        "type": "string",
                        "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                      },
                      "payerReference": {
                        "type": "string",
                        "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                      },
                      "vaultID": {
                        "type": "string",
                        "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                      },
                      "type": {
                        "type": "string",
                        "description": "The payment method type. Enumerated value: 'card', 'e-wallet', 'token'."
                      },
                      "paymentBrand": {
                        "type": "string",
                        "description": "The payment brand. Enumerated value. Alipay: Alipay CN WeChat_Pay: WeChat Pay. Mandatory when paymentMethod=e-wallet"
                      },
                      "planID": {
                        "type": "string",
                        "description": "The auto debit template id. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "subOpenID": {
                        "type": "string",
                        "description": "WeChat pay use ID. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "authCode": {
                        "type": "string",
                        "description": "The authorization code used when signing a deduction. Max for 64."
                      },
                      "card": {
                        "type": "object",
                        "description": "If Type = 'card', the field is needed to be sent, which means that the paymentMethod to be bound is the card. For PUT /paymentMethod, Usage 1: If you want to update the card information corresponding to the token, you need to send this field Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                        "properties": {
                          "encryptedCardInfo": {
                            "type": "string",
                            "description": "The encrypted card information. It is needed to be spliced into JSON character string with card number, validity period and security code before encryption, and then the character string is encrypted as a whole. Step 1: The spliced json character string: [\"cardNumber\":\"1234123412341234\", \" expiryDate\": \"0724\", \"cvc\":\"123\", \"holderName\":\"Bob\"]. Step 2: Encrypt the character string using the RSA public key of the organization/store level. Step 3: Put the cipher text into this field When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Max for 2048."
                          },
                          "cardInfo": {
                            "type": "object",
                            "description": "Usage 1: The card information structure for transmitting unencrypted text card information. When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Usage 2: (For PUT /paymentMethod) Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                            "required": [
                              "cardNumber"
                            ],
                            "properties": {
                              "cardNumber": {
                                "type": "string",
                                "description": "The card number. Max for 19."
                              },
                              "expiryDate": {
                                "type": "string",
                                "description": "The validity YYMM. No need to send if UPI debit card transactions. Max for 4."
                              },
                              "cvc": {
                                "type": "string",
                                "description": "The security code. Max for 4."
                              },
                              "holderName": {
                                "type": "string",
                                "description": "The cardholder's name. Max for 50."
                              }
                            }
                          },
                          "tokenize": {
                            "type": "boolean",
                            "description": "Whether to generate token. If the value is true, use the card information and generate the token."
                          },
                          "tokenValidDays": {
                            "type": "string",
                            "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                          },
                          "payerReference": {
                            "type": "string",
                            "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                          }
                        }
                      },
                      "token": {
                        "type": "object",
                        "description": "If Type = 'token', the field is needed to be sent, which means that the paymentMethod to be bound is the token.",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The token value. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The vaultID of the token group. Max for 36."
                          }
                        }
                      },
                      "e-wallet": {
                        "type": "object",
                        "description": "If Type = 'e-wallet', the field is needed to be sent, which means that the paymentMethod to be bound is the e-wallet.",
                        "required": [
                          "paymentBrand"
                        ],
                        "properties": {
                          "paymentBrand": {
                            "type": "string",
                            "description": "The payment brand. Enumerated value. Alipay: Alipay CN AlipayHK: AlipayHK WeChat_Pay: WeChat Pay TrueMoney: TrueMoney TNG: Touch 'n Go GCash: GCash DANA: DANA bKash: bKash Kakao_Pay: Kakao Pay Easypaisa: Easypaisa"
                          },
                          "subOpenID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET or MINI. Max for 64."
                          },
                          "subAppID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET, MINI or APP. Max for 64."
                          }
                        }
                      }
                    }
                  },
                  "storeInfo": {
                    "type": "object",
                    "description": "When a store supports multiple MCCs, specify the MCC used for the order.",
                    "properties": {
                      "MCC": {
                        "type": "string",
                        "description": "The Merchant Category Code. Max for 4."
                      }
                    }
                  },
                  "transAmount": {
                    "type": "object",
                    "description": "The transaction amount.",
                    "required": [
                      "currency",
                      "value"
                    ],
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The currency. The three-character currency code as defined in ISO-4217. For example : CNY."
                      },
                      "value": {
                        "type": "string",
                        "description": "The amount with major unit. Max for 12."
                      },
                      "transportValue": {
                        "type": "string",
                        "description": "Logistics costs, only RMB. WeChat open orders must be sent for customs declaration. Only used in /customsClearance."
                      },
                      "productValue": {
                        "type": "string",
                        "description": "Commodity cost, only supports RMB. WeChat open orders must be sent for customs declaration.Only used in /customsClearance."
                      }
                    }
                  },
                  "transInitiator": {
                    "type": "object",
                    "description": "Transaction initiated platform",
                    "required": [
                      "platform"
                    ],
                    "properties": {
                      "platform": {
                        "type": "string",
                        "description": "WEB: PC browser; WAP: Mobile phone browser; APP: Mobile APP; MINI: Mini Program; INWALLET: In-wallet browser"
                      },
                      "spec": {
                        "type": "string",
                        "description": "The browser version. Max for 30."
                      },
                      "appVersion": {
                        "type": "string",
                        "description": "The APP version. Max for 20."
                      },
                      "deviceType": {
                        "type": "string",
                        "description": "The terminal type: 'Android' or 'iOS'."
                      },
                      "userCreateIp": {
                        "type": "string",
                        "description": "The IP address of the terminal where the user initiates the transaction Mandatory when paymentBrand = WeChat Pay and platform = WAP. Max for 64."
                      },
                      "osVersion": {
                        "type": "string",
                        "description": "Operating system version. Max for 20."
                      }
                    }
                  },
                  "allowAuthentication": {
                    "type": "boolean",
                    "description": "If true, authentication will be performed as Mandatory when paymentMethod.type = card."
                  },
                  "authenticationOnly": {
                    "type": "boolean",
                    "description": "If true, authentication will be performed as Mandatory when paymentMethod.type = card."
                  },
                  "captureAfterHours": {
                    "type": "string",
                    "description": "The capture delay time. Capture according to time, change the order status to captured and send asynchronous notifications to the access party. If it is not sent, the default is to select manual capture 0: Capture immediately 1~168: Automatic capture after 1~168 hours When type = e-wallet, you can only send ‘0’. Max for 3."
                  },
                  "goodsList": {
                    "type": "string",
                    "description": "The goods detail. Optional when paymentMethod.type = e-wallet, and don't need to send when paymentMethod.type = card/token. Max for 8192."
                  },
                  "returnUrl": {
                    "type": "string",
                    "description": "The payment success callback address. Jump to this address after successful payment. mandatory when paymentBrand = ALP. Mandatory when paymentBrand = WXP and platform = INWALLET. Only be used in e-Wallet transaction. Max for 300."
                  },
                  "validTime": {
                    "type": "integer",
                    "description": "The effective time of the order's allowable payment, in minutes. Minimum 5 minutes, maximum 1440 minutes (24 hours). Optional when paymentMethod.type = e-wallet, and don't need to send when paymentMethod.type = card/token. Max for 4.",
                    "format": "int32"
                  },
                  "tradeInfo": {
                    "type": "object",
                    "description": "Mandatory when paymentBrand = Alipay.",
                    "required": [
                      "tradeType"
                    ],
                    "properties": {
                      "tradeType": {
                        "type": "string",
                        "description": "The trade type. Below 4 types are supported: Hotel/Airline/Sale of goods/0thers. For example : Hotel."
                      },
                      "hotelName": {
                        "type": "string",
                        "description": "The hotel name. Mandatory when tradeType is Hotel. Max for 128."
                      },
                      "checkInTime": {
                        "type": "string",
                        "description": "The check-in time. The transaction time submitted by the merchant. Format: RFC3339. Mandatory when tradeType is Hotel. For example :2006-01-02T15:04:05+07:00.",
                        "format": "date"
                      },
                      "checkOutTime": {
                        "type": "string",
                        "description": "The check-out time. The transaction time submitted by the merchant. Format: RFC3339. Mandatory when tradeType is Hotel. For example :2006-01-02T15:04:05+07:00.",
                        "format": "date"
                      },
                      "flightNumber": {
                        "type": "string",
                        "description": "The flight number. Mandatory when tradeType is Airline. If multiple parameters are sent, separate them with commas. For example: CZ689,MU5910. Max for 30."
                      },
                      "departureTime": {
                        "type": "string",
                        "description": "The departure time. The transaction time submitted by the merchant. Format: RFC3339. Mandatory when tradeType is Airline. For example: 2006-01-02T15:04:05+07:00.",
                        "format": "date"
                      },
                      "goodsName": {
                        "type": "string",
                        "description": "The name of the goods. Mandatory when tradeType is Sale of goods. For example: iPhone XR. Max for 128."
                      },
                      "goodsDescription": {
                        "type": "string",
                        "description": "The description of the goods. If multiple parameters are sent, separate them with commas. Mandatory when tradeType is Sale of goods. For example: iPhone XR 512G Gold,iPad 12.9 256G. Max for 256."
                      },
                      "totalQuantity": {
                        "type": "integer",
                        "description": "The total quantities of all goods in one order. Mandatory when tradeType is Sale of goods. Value range is 1-99.  For Example: 2. Max for 2.",
                        "format": "int32"
                      }
                    }
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "The remark information. Max for 512."
                  }
                }
              },
              "examples": {
                "WeChat Pay": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628696338142",
                      "merchantTransTime": "2021-08-11T23:38:58+08:00"
                    },
                    "paymentMethod": {
                      "type": "e-wallet",
                      "e-wallet": {
                        "paymentBrand": "WeChat_Pay"
                      }
                    },
                    "transAmount": {
                      "currency": "JPY",
                      "value": "5"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://e3d313d3-99ca-4b93-b1b0-4238aab7cd95.mock.pstmn.io",
                    "captureAfterHours": "0",
                    "returnUrl": "http://www.cardinfolink.com",
                    "validTime": "60"
                  }
                },
                "Alipay": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628695462332",
                      "merchantTransTime": "2021-08-11T23:24:22+08:00"
                    },
                    "paymentMethod": {
                      "type": "e-wallet",
                      "e-wallet": {
                        "paymentBrand": "Alipay"
                      }
                    },
                    "transAmount": {
                      "currency": "HKD",
                      "value": "10.0"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://e3d313d3-99ca-4b93-b1b0-4238aab7cd95.mock.pstmn.io",
                    "captureAfterHours": "0",
                    "returnUrl": "http://www.cardinfolink.com",
                    "validTime": "60"
                  }
                },
                "jkopay": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628696788306",
                      "merchantTransTime": "2021-08-11T23:46:28+08:00"
                    },
                    "paymentMethod": {
                      "type": "e-wallet",
                      "e-wallet": {
                        "paymentBrand": "Jkopay"
                      }
                    },
                    "transAmount": {
                      "currency": "TWD",
                      "value": "5"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://e3d313d3-99ca-4b93-b1b0-4238aab7cd95.mock.pstmn.io",
                    "captureAfterHours": "0",
                    "returnUrl": "http://www.cardinfolink.com",
                    "validTime": "60"
                  }
                },
                "Card 3DS Page": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628681790797",
                      "merchantTransTime": "2021-08-11T19:36:30+08:00"
                    },
                    "paymentMethod": {
                      "type": "card",
                      "card": {
                        "cardInfo": {
                          "cardNumber": "6011000000001093",
                          "expiryDate": "2407",
                          "cvc": 86
                        },
                        "tokenize": false,
                        "payerReference": "Your identification"
                      }
                    },
                    "transAmount": {
                      "currency": "HKD",
                      "value": "10.0"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://e3d313d3-99ca-4b93-b1b0-4238aab7cd95.mock.pstmn.io",
                    "authentication": {
                      "returnUrl": "http://www.cardinfolink.com",
                      "threeDS": {
                        "deviceType": "iOS"
                      }
                    },
                    "allowAuthentication": true,
                    "authenticationOnly": false,
                    "captureAfterHours": "0"
                  }
                },
                "Card 3DS Integrator": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628689885648",
                      "merchantTransTime": "2021-08-11T21:51:25+08:00"
                    },
                    "paymentMethod": {
                      "type": "card",
                      "card": {
                        "cardInfo": {
                          "cardNumber": "4761340000000019",
                          "expiryDate": "2212",
                          "cvc": "946"
                        },
                        "tokenize": false,
                        "payerReference": "Your identification"
                      }
                    },
                    "transAmount": {
                      "currency": "THB",
                      "value": "10.0"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://e3d313d3-99ca-4b93-b1b0-4238aab7cd95.mock.pstmn.io",
                    "authentication": {
                      "authenticationType": "threeDSIntegrator",
                      "returnUrl": "http://www.cardinfolink.com",
                      "threeDS": {
                        "deviceType": "iOS"
                      }
                    },
                    "allowAuthentication": true,
                    "authenticationOnly": false,
                    "captureAfterHours": "0"
                  }
                },
                "Card Authentication Only": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628690122622",
                      "merchantTransTime": "2021-08-11T21:55:22+08:00"
                    },
                    "paymentMethod": {
                      "type": "card",
                      "card": {
                        "cardInfo": {
                          "cardNumber": "4761340000000019",
                          "expiryDate": "2212",
                          "cvc": "946"
                        },
                        "tokenize": false,
                        "payerReference": "Your identification"
                      }
                    },
                    "transAmount": {
                      "currency": "THB",
                      "value": "10.0"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://e3d313d3-99ca-4b93-b1b0-4238aab7cd95.mock.pstmn.io",
                    "authentication": {
                      "authenticationType": "threeDSIntegrator",
                      "returnUrl": "http://www.cardinfolink.com",
                      "threeDS": {
                        "deviceType": "iOS"
                      }
                    },
                    "allowAuthentication": true,
                    "authenticationOnly": true
                  }
                },
                "Card UPI securePlus": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628675628432",
                      "merchantTransTime": "2021-08-11T17:53:48+08:00"
                    },
                    "paymentMethod": {
                      "type": "card",
                      "card": {
                        "cardInfo": {
                          "cardNumber": "6222821234560017",
                          "expiryDate": "3312",
                          "cvc": "123"
                        },
                        "tokenize": true,
                        "payerReference": "Your identification",
                        "vaultID": "vaultA"
                      }
                    },
                    "transAmount": {
                      "currency": "THB",
                      "value": "10.0"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "returnUrl": "http://www.cardinfolink.com",
                    "webhook": "https://e3d313d3-99ca-4b93-b1b0-4238aab7cd95.mock.pstmn.io",
                    "authentication": {
                      "mobilePhone": "13012345678"
                    },
                    "allowAuthentication": true,
                    "authenticationOnly": false,
                    "captureAfterHours": "0"
                  }
                },
                "Card Non-Authentication": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108111628680376329",
                      "merchantTransTime": "2021-08-11T19:12:56+08:00"
                    },
                    "paymentMethod": {
                      "type": "card",
                      "card": {
                        "cardInfo": {
                          "cardNumber": "6210947764000027",
                          "expiryDate": "3010",
                          "cvc": "456"
                        },
                        "tokenize": false
                      }
                    },
                    "transAmount": {
                      "currency": "THB",
                      "value": "10.00"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "returnUrl": "http://www.cardinfolink.com",
                    "webhook": "https://64012512-b819-46d5-80ee-bebd40cc3806.mock.pstmn.io",
                    "authentication": {
                      "mobilePhone": 812345678
                    },
                    "allowAuthentication": false,
                    "authenticationOnly": false,
                    "captureAfterHours": "0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Card 3DS Page": {
                    "value": "{\n    \"authentication\": {\n        \"authenticationType\": \"CYBS\",\n        \"threeDS\": {\n            \"redirectData\": {\n                \"method\": \"POST\"\n            },\n            \"redirectUrl\": \"https://counter-test.everonet.com/3ds?YWNjZXNzVG9rZW49NWU5ODBjMjc4YWU1NjI1ZGQyYWQ1MTE4MzY2YzY1NTAmaW5zQ29kZT0xMDEzMDAxMCZvcmRlck51bT1UMTA4MTExNjI4NjgxNzkwNzk3JnN0b3JlTnVtPVMwNTk3NTgmQ0NBPWg2NmVHbHkrRS9yZzgxLzFsdFQ2d1RWTnMzdzhDZUJ3M1ZKK3A0L1VmQm9aUXc2RFYxYnhDdG9hNGR4eGp2ZlArc0FsZ0Z5b2RWMEFURUUxU1oyckw3ZFhxd01IeGx1Y1NjaWIyc2M5b1VmcXdXTDU4cC9wK2NBclBRYjdRVDlZQ2FOa3pjeXp6TEJYMytOSVRSME1UR2t6Ri8yUktic1lqMHVoQTltRnJrc2QvZ0FmNHl4OCtBNjUvSFROekU5T0UwdHFNN1RqVDA3d2RNeWF5S3VSOUZJNy9Ec0oxaC83ZTdtQzdQbXYxeXY2WkR4OXExRWFSb2VLNUZKYm9hQUYvWWhMZzc0TXVNVUpoTlVyZFAvYlBFMnQzcHBNcHBkYzNiTzJmbExjNEpYdk9HM3J5WXZsVWxrdHIzWllvNGFQY08xa3VpUFZNYkdUbnFTVU9rTis4QT09JnJldHVyblVybD1hSFIwY0RvdkwzZDNkeTVqWVhKa2FXNW1iMnhwYm1zdVkyOXQ=\"\n        }\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"a622be3874124872a7efa808d36e8c50\",\n            \"evoTransTime\": \"2021-08-11T19:36:30+08:00\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108111628681790797\",\n            \"merchantTransTime\": \"2021-08-11T19:36:30+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"pspTransTime\": \"2021-08-11T19:36:30+08:00\"\n        },\n        \"status\": \"Verifying\",\n        \"transAmount\": {\n            \"currency\": \"HKD\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"601100\",\n            \"fundingType\": \"credit\",\n            \"last4No\": \"1093\",\n            \"paymentBrand\": \"Diners\"\n        },\n        \"type\": \"card\"\n    },\n    \"pspData\": {\n        \"name\": \"Diners\"\n    },\n    \"result\": {\n        \"action\": \"RedirectShopper\",\n        \"code\": \"S0005\",\n        \"message\": \"3DS authentication required\"\n    },\n    \"transInitiator\": {\n        \"deviceType\": \"iOS\",\n        \"platform\": \"WEB\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "authenticationType": {
                          "type": "string",
                          "example": "CYBS"
                        },
                        "threeDS": {
                          "type": "object",
                          "properties": {
                            "redirectData": {
                              "type": "object",
                              "properties": {
                                "method": {
                                  "type": "string",
                                  "example": "POST"
                                }
                              }
                            },
                            "redirectUrl": {
                              "type": "string",
                              "example": "https://counter-test.everonet.com/3ds?YWNjZXNzVG9rZW49NWU5ODBjMjc4YWU1NjI1ZGQyYWQ1MTE4MzY2YzY1NTAmaW5zQ29kZT0xMDEzMDAxMCZvcmRlck51bT1UMTA4MTExNjI4NjgxNzkwNzk3JnN0b3JlTnVtPVMwNTk3NTgmQ0NBPWg2NmVHbHkrRS9yZzgxLzFsdFQ2d1RWTnMzdzhDZUJ3M1ZKK3A0L1VmQm9aUXc2RFYxYnhDdG9hNGR4eGp2ZlArc0FsZ0Z5b2RWMEFURUUxU1oyckw3ZFhxd01IeGx1Y1NjaWIyc2M5b1VmcXdXTDU4cC9wK2NBclBRYjdRVDlZQ2FOa3pjeXp6TEJYMytOSVRSME1UR2t6Ri8yUktic1lqMHVoQTltRnJrc2QvZ0FmNHl4OCtBNjUvSFROekU5T0UwdHFNN1RqVDA3d2RNeWF5S3VSOUZJNy9Ec0oxaC83ZTdtQzdQbXYxeXY2WkR4OXExRWFSb2VLNUZKYm9hQUYvWWhMZzc0TXVNVUpoTlVyZFAvYlBFMnQzcHBNcHBkYzNiTzJmbExjNEpYdk9HM3J5WXZsVWxrdHIzWllvNGFQY08xa3VpUFZNYkdUbnFTVU9rTis4QT09JnJldHVyblVybD1hSFIwY0RvdkwzZDNkeTVqWVhKa2FXNW1iMnhwYm1zdVkyOXQ="
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "a622be3874124872a7efa808d36e8c50"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-11T19:36:30+08:00"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108111628681790797"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-11T19:36:30+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-11T19:36:30+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Verifying"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "HKD"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "601100"
                            },
                            "fundingType": {
                              "type": "string",
                              "example": "credit"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "1093"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "Diners"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "card"
                        }
                      }
                    },
                    "pspData": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Diners"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "example": "RedirectShopper"
                        },
                        "code": {
                          "type": "string",
                          "example": "S0005"
                        },
                        "message": {
                          "type": "string",
                          "example": "3DS authentication required"
                        }
                      }
                    },
                    "transInitiator": {
                      "type": "object",
                      "properties": {
                        "deviceType": {
                          "type": "string",
                          "example": "iOS"
                        },
                        "platform": {
                          "type": "string",
                          "example": "WEB"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "/payment",
        "description": "Call this API to update a payment transaction.",
        "operationId": "payment_put",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of payment. Request URL to complete authentication.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authentication": {
                    "type": "object",
                    "description": "The cardholder authentication information. Mandatory when the POST payment method response is result.code = S0004/S0005/S0006",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "The purpose of the current PUT payment method request. An enumerated value. [ResendSMS]: Mandatory when the front end needs to resend SecurePlus SMS. Max for 50."
                      },
                      "mobilePhone": {
                        "type": "string",
                        "description": "The cardholder mobile number, used for SecurePlus authentication. Max for 16."
                      },
                      "returnUrl": {
                        "type": "string",
                        "description": "The callback address after authentication has completed. Mandatory under 3DS authentication and LSS authentication scenarios. Max for 300."
                      },
                      "lss": {
                        "type": "object",
                        "description": "The LSS authentication information. The authentication result parameters can be submitted directly during payment if you already have.",
                        "properties": {
                          "lssData": {
                            "type": "object",
                            "description": "The LSS authentication data.",
                            "required": [
                              "eci"
                            ],
                            "properties": {
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              },
                              "lsav": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              }
                            }
                          },
                          "encryptedAuthResponse": {
                            "type": "string",
                            "description": "The encrypted authentication message back to the merchant back URL by LSS DS. Max for 2048."
                          }
                        }
                      },
                      "securePlus": {
                        "type": "object",
                        "description": "The secureplus authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                        "properties": {
                          "securePlusData": {
                            "type": "object",
                            "description": "The secureplus authentication data. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "authenticationResultCode",
                              "vcode"
                            ],
                            "properties": {
                              "authenticationResultCode": {
                                "type": "string",
                                "description": "The raw result of the authentication check. Max for 2."
                              },
                              "vcode": {
                                "type": "string",
                                "description": "The verification code received from UPOP. Max for 2048."
                              }
                            }
                          },
                          "smsCode": {
                            "type": "string",
                            "description": "Mandatory when POST payment is answered with result.code = S0004 and action = VerifySMSCode. Max for 6."
                          }
                        }
                      },
                      "threeDS": {
                        "type": "object",
                        "description": "Mandatory when the desired authentication method is 3DS.",
                        "required": [
                          "deviceType"
                        ],
                        "properties": {
                          "authenticationType": {
                            "type": "string",
                            "description": "Expected 3DS authentication mode, below values are acceptable. \"threeDSPage\": 3DS authentication with single page jump; \"threeDSIntegrator\": API integrated 3DS certification. If you don’t send it, the default is \"threeDSPage\""
                          },
                          "deviceType": {
                            "type": "string",
                            "description": "'Web' 'iOS' 'Android'"
                          },
                          "shopperIP": {
                            "type": "string",
                            "description": "The shopper's IP address. Max for 64."
                          },
                          "shopperEmail": {
                            "type": "string",
                            "description": "The shopper‘s email address. Max for 254."
                          },
                          "origin": {
                            "type": "string",
                            "description": "The URL of the page where you are loading the 3D Secure 2 Component from. The origin should not include subdirectories and a trailing slash. You can also get this by opening the browser console and calling window.location.origin. Mandatory if deviceType = Web."
                          },
                          "mpiData": {
                            "type": "object",
                            "description": "The 3DS authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "cavv",
                              "eci"
                            ],
                            "properties": {
                              "cavv": {
                                "type": "string",
                                "description": "The cavv. Max for 28."
                              },
                              "cavvAlgorithm": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. Max for 1."
                              },
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. The transaction identifier in a decoded form assigned by the directory server. Max for 20."
                              },
                              "dsTransID": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. Max for 36."
                              },
                              "threeDSVersion": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. The current version supported is 2.1.0. Max for 10."
                              }
                            }
                          },
                          "redirectData": {
                            "type": "object",
                            "properties": {
                              "pAres": {
                                "type": "string",
                                "description": "The pares data. The issuer bank's authentication page will return this value when the shopper finished the ChallengeShoper process. Mandatory when threeDSFinished=Y in the request message and get response with code = S0005, action = RedirectShopper in POST payment method. Max for 300."
                              },
                              "threeDSComplnd": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with code = S0005 and action = IdentifyShopper."
                              },
                              "threeDSFinished": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with result.code = S0005 and action = RedirectShopper or ChallengeShopper."
                              }
                            }
                          }
                        }
                      },
                      "browserInfo": {
                        "type": "object",
                        "description": "The user browser information for 3DS authentication, which will be passed to HiTRUST.",
                        "required": [
                          "acceptHeader",
                          "colorDepth",
                          "javaEnabled",
                          "language",
                          "screenHeight",
                          "screenWidth",
                          "timeZoneOffset",
                          "userAgent"
                        ],
                        "properties": {
                          "acceptHeader": {
                            "type": "string",
                            "description": "The accept header value of consumer browser. Max for 2048."
                          },
                          "colorDepth": {
                            "type": "string",
                            "description": "The color depth of the shopper's browser, in pixels. Use the screen .colorDepth property of the browser to get the value. Accepted value: 1,4,8,15,16,24,32 or 48 bits. Max for 2."
                          },
                          "javaEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute Java."
                          },
                          "javaScriptEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present."
                          },
                          "language": {
                            "type": "string",
                            "description": "The value that represents the browser language defined in IETF BCP47, returned from the navigator.language property. Examples: NL , FR , US. Max for 8."
                          },
                          "screenHeight": {
                            "type": "string",
                            "description": "The total height of the cardholder's screen in pixels. The value is returned from the screen.height property. Max for 6."
                          },
                          "screenWidth": {
                            "type": "string",
                            "description": "The total width of the cardholder's screen in pixels. The value is returned from the screen.width property. Max for 6."
                          },
                          "timeZoneOffset": {
                            "type": "string",
                            "description": "The time difference between the UTC time and the local time of the cardholder's browser, in minutes. The value is got from the getTimezoneOffset () method. For example: \"-120\". Max for 5."
                          },
                          "userAgent": {
                            "type": "string",
                            "description": "The user agent value of the shopper's browser. Max for 2048."
                          }
                        }
                      },
                      "accountInfo": {
                        "type": "object",
                        "description": "The shopper account information for 3D Secure 2, which will be passed to HiTRUST.",
                        "required": [
                          "country",
                          "houseNumberOrName",
                          "postalCode",
                          "stateOrProvince"
                        ],
                        "properties": {
                          "accountAgeIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this shopper account has been created. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "accountChangeIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's account was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountCreationDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was created. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's password was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDateIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's password was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "purchasesLast6Months": {
                            "type": "string",
                            "description": "The number of order purchased in the last 6 months. Max for 12."
                          },
                          "addCardAttemptsDay": {
                            "type": "string",
                            "description": "The number of attempts the shopper has tried to add a card to the account in the last day. Max for 12."
                          },
                          "pastTransactionsDay": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past 24 hours. Max for 12."
                          },
                          "pastTransactionsYear": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past year. Max for 12."
                          },
                          "paymentAccountAge": {
                            "type": "string",
                            "description": "The datetime the payment method was added to the shopper's account. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "paymentAccountIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this payment method has been added to the shopper's account. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "deliveryAddressUsageDate": {
                            "type": "string",
                            "description": "The datetime the selected delivery address was last used. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "deliveryAddressUsageIndicator": {
                            "type": "string",
                            "description": "The indicator when this delivery address was last used. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "suspiciousActivity": {
                            "type": "boolean",
                            "description": "Whether any suspicious activity has been recorded on this account."
                          },
                          "homePhone": {
                            "type": "string",
                            "description": "The shopper's home phone number (including the country code). Max for 16."
                          },
                          "mobilePhone": {
                            "type": "string",
                            "description": "The shopper's mobile phone number (including the country code). Max for 16."
                          },
                          "workPhone": {
                            "type": "string",
                            "description": "The shopper's work phone number (including the country code). Max for 16."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          }
                        }
                      },
                      "deliveryAddress": {
                        "type": "object",
                        "description": "The delivery address. Mandatory if HiTRUST is used as the authentication way.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      },
                      "merchantRiskIndicator": {
                        "type": "object",
                        "description": "The additional risk fields for 3D Secure 2. The name of the street will be passed to HiTRUST. Include this in your request whenever available.",
                        "properties": {
                          "addressMatch": {
                            "type": "boolean",
                            "description": "Whether the chosen delivery address is identical to the billing address."
                          },
                          "deliveryEmail": {
                            "type": "string",
                            "description": "The delivery email address (for digital goods). Max for 256."
                          },
                          "deliveryTimeframe": {
                            "type": "string",
                            "description": "The estimated delivery time for the shopper to receive the goods. Allowed values: 'electronicDelivery', 'sameDayShipping', 'overnightShipping' and 'twoOrMoreDaysShipping'."
                          },
                          "giftCardAmount": {
                            "type": "string",
                            "description": "The amount purchased with a prepaid or gift card. Max for 12."
                          },
                          "giftCardCount": {
                            "type": "string",
                            "description": "The number of individual prepaid or gift cards used for this purchase. Max for 12."
                          },
                          "preOrderDate": {
                            "type": "string",
                            "description": "For pre-order purchases, the expected date this product will be available to the shopper. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "preOrderPurchase": {
                            "type": "boolean",
                            "description": "Whether this transaction is for pre-ordering a product."
                          },
                          "reorderItems": {
                            "type": "boolean",
                            "description": "Whether the shopper has already purchased the same items in the past."
                          },
                          "deliveryAddressIndicator": {
                            "type": "string",
                            "description": "The indicator regarding to the delivery address. Allowed values: 'shipToBillingAddress', 'shipToVerifiedAddress', 'shipToNewAddress', 'shipToStore', 'digitalGoods', 'goodsNotShipped' and 'other'."
                          }
                        }
                      },
                      "billingAddress": {
                        "type": "object",
                        "description": "The billing address, which will be passed to HiTRUST.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      }
                    }
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "The remark information. Max for 512."
                  },
                  "paymentMethod": {
                    "type": "object",
                    "description": "Send security code when used in Secureplus enrollment If securePlus.smsCode exists and the card type is a credit card, it must be sent",
                    "properties": {
                      "tokenValidDays": {
                        "type": "string",
                        "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                      },
                      "payerReference": {
                        "type": "string",
                        "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                      },
                      "vaultID": {
                        "type": "string",
                        "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                      },
                      "type": {
                        "type": "string",
                        "description": "The payment method type. Enumerated value: 'card', 'e-wallet', 'token'."
                      },
                      "paymentBrand": {
                        "type": "string",
                        "description": "The payment brand. Enumerated value. Alipay: Alipay CN WeChat_Pay: WeChat Pay. Mandatory when paymentMethod=e-wallet"
                      },
                      "planID": {
                        "type": "string",
                        "description": "The auto debit template id. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "subOpenID": {
                        "type": "string",
                        "description": "WeChat pay use ID. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "authCode": {
                        "type": "string",
                        "description": "The authorization code used when signing a deduction. Max for 64."
                      },
                      "card": {
                        "type": "object",
                        "description": "If Type = 'card', the field is needed to be sent, which means that the paymentMethod to be bound is the card. For PUT /paymentMethod, Usage 1: If you want to update the card information corresponding to the token, you need to send this field Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                        "properties": {
                          "encryptedCardInfo": {
                            "type": "string",
                            "description": "The encrypted card information. It is needed to be spliced into JSON character string with card number, validity period and security code before encryption, and then the character string is encrypted as a whole. Step 1: The spliced json character string: [\"cardNumber\":\"1234123412341234\", \" expiryDate\": \"0724\", \"cvc\":\"123\", \"holderName\":\"Bob\"]. Step 2: Encrypt the character string using the RSA public key of the organization/store level. Step 3: Put the cipher text into this field When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Max for 2048."
                          },
                          "cardInfo": {
                            "type": "object",
                            "description": "Usage 1: The card information structure for transmitting unencrypted text card information. When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Usage 2: (For PUT /paymentMethod) Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                            "required": [
                              "cardNumber"
                            ],
                            "properties": {
                              "cardNumber": {
                                "type": "string",
                                "description": "The card number. Max for 19."
                              },
                              "expiryDate": {
                                "type": "string",
                                "description": "The validity YYMM. No need to send if UPI debit card transactions. Max for 4."
                              },
                              "cvc": {
                                "type": "string",
                                "description": "The security code. Max for 4."
                              },
                              "holderName": {
                                "type": "string",
                                "description": "The cardholder's name. Max for 50."
                              }
                            }
                          },
                          "tokenize": {
                            "type": "boolean",
                            "description": "Whether to generate token. If the value is true, use the card information and generate the token."
                          },
                          "tokenValidDays": {
                            "type": "string",
                            "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                          },
                          "payerReference": {
                            "type": "string",
                            "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                          }
                        }
                      },
                      "token": {
                        "type": "object",
                        "description": "If Type = 'token', the field is needed to be sent, which means that the paymentMethod to be bound is the token.",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The token value. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The vaultID of the token group. Max for 36."
                          }
                        }
                      },
                      "e-wallet": {
                        "type": "object",
                        "description": "If Type = 'e-wallet', the field is needed to be sent, which means that the paymentMethod to be bound is the e-wallet.",
                        "required": [
                          "paymentBrand"
                        ],
                        "properties": {
                          "paymentBrand": {
                            "type": "string",
                            "description": "The payment brand. Enumerated value. Alipay: Alipay CN AlipayHK: AlipayHK WeChat_Pay: WeChat Pay TrueMoney: TrueMoney TNG: Touch 'n Go GCash: GCash DANA: DANA bKash: bKash Kakao_Pay: Kakao Pay Easypaisa: Easypaisa"
                          },
                          "subOpenID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET or MINI. Max for 64."
                          },
                          "subAppID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET, MINI or APP. Max for 64."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "authentication": {
                      "securePlus": {
                        "smsCode": "111111"
                      }
                    },
                    "paymentMethod": {
                      "card": {
                        "cardInfo": {
                          "cvc": "123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"authentication\": {\n        \"authenticationType\": \"securePlus\",\n        \"securePlus\": {\n            \"securePlusData\": {\n                \"activateStatus\": \"Y\",\n                \"authenticationResultCode\": \"09\",\n                \"vcode\": \"20210812163118006662\"\n            }\n        },\n        \"threeDS\": {\n            \"deviceType\": \"Web\"\n        }\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"b1f188bbead8473587e45162c33dc30c\",\n            \"evoTransTime\": \"2021-08-11T09:53:09Z\",\n            \"retrievalReferenceNum\": \"210812163118\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108111628675628432\",\n            \"merchantTransTime\": \"2021-08-11T17:53:48+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079375\",\n            \"pspTransTime\": \"2021-08-11T17:53:48+08:00\"\n        },\n        \"status\": \"Captured\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.00\"\n        }\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"622282\",\n            \"fundingType\": \"credit\",\n            \"last4No\": \"0017\",\n            \"paymentBrand\": \"UnionPay\"\n        },\n        \"token\": {\n            \"fingerprint\": \"b33cb607f9e5677c118103b971a2f6b6\",\n            \"status\": \"enable\",\n            \"value\": \"pmt_a3904fbc3fecb0075840706752ce6f66\",\n            \"vaultID\": \"vaultA\"\n        },\n        \"type\": \"card\"\n    },\n    \"pspData\": {\n        \"name\": \"UnionPay\"\n    },\n    \"result\": {\n        \"action\": \"VerifySMSCode\",\n        \"code\": \"S0000\",\n        \"message\": \"success\",\n        \"pspMessage\": \"Approved\",\n        \"pspResponseCode\": \"00\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "authenticationType": {
                          "type": "string",
                          "example": "securePlus"
                        },
                        "securePlus": {
                          "type": "object",
                          "properties": {
                            "securePlusData": {
                              "type": "object",
                              "properties": {
                                "activateStatus": {
                                  "type": "string",
                                  "example": "Y"
                                },
                                "authenticationResultCode": {
                                  "type": "string",
                                  "example": 9
                                },
                                "vcode": {
                                  "type": "string",
                                  "example": "20210812163118006662"
                                }
                              }
                            }
                          }
                        },
                        "threeDS": {
                          "type": "object",
                          "properties": {
                            "deviceType": {
                              "type": "string",
                              "example": "Web"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "b1f188bbead8473587e45162c33dc30c"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-11T09:53:09Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "210812163118"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108111628675628432"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-11T17:53:48+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79375
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-11T17:53:48+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Captured"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.00"
                            }
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "622282"
                            },
                            "fundingType": {
                              "type": "string",
                              "example": "credit"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "0017"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "UnionPay"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "fingerprint": {
                              "type": "string",
                              "example": "b33cb607f9e5677c118103b971a2f6b6"
                            },
                            "status": {
                              "type": "string",
                              "example": "enable"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_a3904fbc3fecb0075840706752ce6f66"
                            },
                            "vaultID": {
                              "type": "string",
                              "example": "vaultA"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "card"
                        }
                      }
                    },
                    "pspData": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UnionPay"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "example": "VerifySMSCode"
                        },
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        },
                        "pspMessage": {
                          "type": "string",
                          "example": "Approved"
                        },
                        "pspResponseCode": {
                          "type": "string",
                          "example": "00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "/payment",
        "description": "Call this API to query a payment transaction.",
        "operationId": "payment_get",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of paymentMethod. Request URL to query token authentication&generation.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"authentication\": {\n        \"authenticationType\": \"securePlus\",\n        \"securePlus\": {\n            \"securePlusData\": {\n                \"activateStatus\": \"Y\",\n                \"authenticationResultCode\": \"09\",\n                \"vcode\": \"20210812163118006662\"\n            }\n        }\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"b1f188bbead8473587e45162c33dc30c\",\n            \"evoTransTime\": \"2021-08-11T09:53:09Z\",\n            \"retrievalReferenceNum\": \"210812163118\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108111628675628432\",\n            \"merchantTransTime\": \"2021-08-11T17:53:48+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079375\",\n            \"pspTransTime\": \"2021-08-11T17:53:48+08:00\"\n        },\n        \"status\": \"Captured\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.00\"\n        }\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"622282\",\n            \"fundingType\": \"credit\",\n            \"last4No\": \"0017\",\n            \"paymentBrand\": \"UnionPay\"\n        },\n        \"token\": {\n            \"fingerprint\": \"b33cb607f9e5677c118103b971a2f6b6\",\n            \"value\": \"pmt_a3904fbc3fecb0075840706752ce6f66\",\n            \"vaultID\": \"vaultA\"\n        },\n        \"type\": \"card\"\n    },\n    \"pspData\": {\n        \"name\": \"UnionPay\"\n    },\n    \"result\": {\n        \"action\": \"VerifySMSCode\",\n        \"code\": \"S0000\",\n        \"message\": \"success\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "authenticationType": {
                          "type": "string",
                          "example": "securePlus"
                        },
                        "securePlus": {
                          "type": "object",
                          "properties": {
                            "securePlusData": {
                              "type": "object",
                              "properties": {
                                "activateStatus": {
                                  "type": "string",
                                  "example": "Y"
                                },
                                "authenticationResultCode": {
                                  "type": "string",
                                  "example": 9
                                },
                                "vcode": {
                                  "type": "string",
                                  "example": "20210812163118006662"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "b1f188bbead8473587e45162c33dc30c"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-11T09:53:09Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "210812163118"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108111628675628432"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-11T17:53:48+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79375
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-11T17:53:48+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Captured"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.00"
                            }
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "622282"
                            },
                            "fundingType": {
                              "type": "string",
                              "example": "credit"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "0017"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "UnionPay"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "fingerprint": {
                              "type": "string",
                              "example": "b33cb607f9e5677c118103b971a2f6b6"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_a3904fbc3fecb0075840706752ce6f66"
                            },
                            "vaultID": {
                              "type": "string",
                              "example": "vaultA"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "card"
                        }
                      }
                    },
                    "pspData": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UnionPay"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "string",
                          "example": "VerifySMSCode"
                        },
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/g2/v0/payment/mer/{sid}/evo.e-commerce.cancel": {
      "post": {
        "summary": "/cancel",
        "description": "Call this API to cancel a payment transaction.",
        "operationId": "cancel_post",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          },
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "merchantTransID of original transaction.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "initiatingReason": {
                    "type": "string",
                    "description": "To state the initiating reason of the transaction. Max for 64."
                  },
                  "merchantTransInfo": {
                    "type": "object",
                    "description": "The order information.",
                    "required": [
                      "merchantTransID",
                      "merchantTransTime"
                    ],
                    "properties": {
                      "merchantTransID": {
                        "type": "string",
                        "description": "The Merchant Order Number. Should be unique in a store. Max for 32."
                      },
                      "merchantOrderReference": {
                        "type": "string",
                        "description": "The Merchant Order Reference Number. No need to verify uniqueness. Max for 32."
                      },
                      "merchantTransTime": {
                        "type": "string",
                        "description": "Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00.",
                        "format": "date"
                      }
                    }
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "The remark information. Max for 512."
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108121628772795699",
                      "merchantTransTime": "2021-08-12T20:53:15+08:00"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://64012512-b819-46d5-80ee-bebd40cc3806.mock.pstmn.io"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"cancel\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"3503313985e549feaf4c767dd5ca7c1e\",\n            \"evoTransTime\": \"2021-08-12T19:53:16+07:00\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772795699\",\n            \"merchantTransTime\": \"2021-08-12T20:53:15+08:00\"\n        },\n        \"status\": \"Success\"\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"0000014fc2674b55a36ffe11920af6cd\",\n            \"evoTransTime\": \"2021-08-12T12:52:54Z\",\n            \"retrievalReferenceNum\": \"210812195302\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772774373\",\n            \"merchantTransTime\": \"2021-08-12T20:52:54+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079423\",\n            \"pspTransTime\": \"2021-08-12T20:52:54+08:00\"\n        },\n        \"status\": \"Cancelled\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\",\n        \"pspMessage\": \"Approved\",\n        \"pspResponseCode\": \"00\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "cancel": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "3503313985e549feaf4c767dd5ca7c1e"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T19:53:16+07:00"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772795699"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:53:15+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Success"
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "0000014fc2674b55a36ffe11920af6cd"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:52:54Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "210812195302"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772774373"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:52:54+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79423
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:52:54+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Cancelled"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        },
                        "pspMessage": {
                          "type": "string",
                          "example": "Approved"
                        },
                        "pspResponseCode": {
                          "type": "string",
                          "example": "00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "/cancel",
        "description": "Call this API to query the cancellation status of a payment transaction.",
        "operationId": "cancel_get",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of Cancel.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"cancel\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"3503313985e549feaf4c767dd5ca7c1e\",\n            \"evoTransTime\": \"2021-08-12T12:53:16Z\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772795699\",\n            \"merchantTransTime\": \"2021-08-12T20:53:15+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"pspTransTime\": \"2021-08-12T20:53:15+08:00\"\n        },\n        \"status\": \"Success\"\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"0000014fc2674b55a36ffe11920af6cd\",\n            \"evoTransTime\": \"2021-08-12T12:52:54Z\",\n            \"retrievalReferenceNum\": \"210812195302\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772774373\",\n            \"merchantTransTime\": \"2021-08-12T20:52:54+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079423\",\n            \"pspTransTime\": \"2021-08-12T20:52:54+08:00\"\n        },\n        \"status\": \"Cancelled\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\"\n    }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "cancel": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "3503313985e549feaf4c767dd5ca7c1e"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:53:16Z"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772795699"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:53:15+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:53:15+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Success"
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "0000014fc2674b55a36ffe11920af6cd"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:52:54Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "210812195302"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772774373"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:52:54+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79423
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:52:54+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Cancelled"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/g2/v0/payment/mer/{sid}/evo.e-commerce.capture": {
      "post": {
        "summary": "/capture",
        "description": "Call this API to capture a payment transaction.",
        "operationId": "capture_post",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          },
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of Payment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "merchantTransInfo": {
                    "type": "object",
                    "description": "The order information.",
                    "required": [
                      "merchantTransID",
                      "merchantTransTime"
                    ],
                    "properties": {
                      "merchantTransID": {
                        "type": "string",
                        "description": "The Merchant Order Number. Should be unique in a store. Max for 32."
                      },
                      "merchantOrderReference": {
                        "type": "string",
                        "description": "The Merchant Order Reference Number. No need to verify uniqueness. Max for 32."
                      },
                      "merchantTransTime": {
                        "type": "string",
                        "description": "Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00.",
                        "format": "date"
                      }
                    }
                  },
                  "transAmount": {
                    "type": "object",
                    "description": "The transaction amount.",
                    "required": [
                      "currency",
                      "value"
                    ],
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The currency. The three-character currency code as defined in ISO-4217. For example : CNY."
                      },
                      "value": {
                        "type": "string",
                        "description": "The amount with major unit. Max for 12."
                      },
                      "transportValue": {
                        "type": "string",
                        "description": "Logistics costs, only RMB. WeChat open orders must be sent for customs declaration. Only used in /customsClearance."
                      },
                      "productValue": {
                        "type": "string",
                        "description": "Commodity cost, only supports RMB. WeChat open orders must be sent for customs declaration.Only used in /customsClearance."
                      }
                    }
                  },
                  "initiatingReason": {
                    "type": "string",
                    "description": "To state the initiating reason of the transaction. Max for 64."
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "The remark information. Max for 512."
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108121628772377604",
                      "merchantTransTime": "2021-08-12T20:46:17+08:00"
                    },
                    "transAmount": {
                      "currency": "THB",
                      "value": "10.0"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://64012512-b819-46d5-80ee-bebd40cc3806.mock.pstmn.io"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"capture\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"0da19e3ceef04f4cbdcd3fc3056a580a\",\n            \"evoTransTime\": \"2021-08-12T19:46:17+07:00\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772377604\",\n            \"merchantTransTime\": \"2021-08-12T20:46:17+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"pspTransTime\": \"2021-08-12T20:46:17+08:00\"\n        },\n        \"status\": \"Success\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"a2a6faae079d4222bdb3e7ef09190c16\",\n            \"evoTransTime\": \"2021-08-12T12:45:58Z\",\n            \"retrievalReferenceNum\": \"210812194606\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772357973\",\n            \"merchantTransTime\": \"2021-08-12T20:45:57+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079420\",\n            \"pspTransTime\": \"2021-08-12T20:45:57+08:00\",\n            \"retrievalReferenceNum\": \"T10812162877\"\n        },\n        \"status\": \"Captured\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"621094\",\n            \"fundingType\": \"debit\",\n            \"last4No\": \"0027\",\n            \"paymentBrand\": \"UnionPay\"\n        },\n        \"token\": {\n            \"fingerprint\": \"6b213dd555317487e98dd9214c14edd1\",\n            \"value\": \"pmt_890819b446608ccffbe27e3ec563b538\"\n        },\n        \"type\": \"card\"\n    },\n    \"pspData\": {\n        \"name\": \"UnionPay\"\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\",\n        \"pspMessage\": \"Approved\",\n        \"pspResponseCode\": \"00\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "capture": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "0da19e3ceef04f4cbdcd3fc3056a580a"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T19:46:17+07:00"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772377604"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:46:17+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:46:17+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Success"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "a2a6faae079d4222bdb3e7ef09190c16"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:45:58Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "210812194606"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772357973"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:45:57+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79420
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:45:57+08:00"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "T10812162877"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Captured"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "621094"
                            },
                            "fundingType": {
                              "type": "string",
                              "example": "debit"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "0027"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "UnionPay"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "fingerprint": {
                              "type": "string",
                              "example": "6b213dd555317487e98dd9214c14edd1"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_890819b446608ccffbe27e3ec563b538"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "card"
                        }
                      }
                    },
                    "pspData": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UnionPay"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        },
                        "pspMessage": {
                          "type": "string",
                          "example": "Approved"
                        },
                        "pspResponseCode": {
                          "type": "string",
                          "example": "00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "/capture",
        "description": "Call this API to query the capture status of a payment transaction.",
        "operationId": "capture_get",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of Capture.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"capture\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"0da19e3ceef04f4cbdcd3fc3056a580a\",\n            \"evoTransTime\": \"2021-08-12T12:46:17Z\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772377604\",\n            \"merchantTransTime\": \"2021-08-12T20:46:17+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"pspTransTime\": \"2021-08-12T20:46:17+08:00\"\n        },\n        \"status\": \"Success\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"a2a6faae079d4222bdb3e7ef09190c16\",\n            \"evoTransTime\": \"2021-08-12T12:45:58Z\",\n            \"retrievalReferenceNum\": \"T10812162877\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772377604\",\n            \"merchantTransTime\": \"2021-08-12T20:46:17+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079420\",\n            \"pspTransTime\": \"2021-08-12T20:45:57+08:00\"\n        },\n        \"status\": \"Captured\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"621094\",\n            \"fundingType\": \"debit\",\n            \"last4No\": \"0027\",\n            \"paymentBrand\": \"UnionPay\"\n        },\n        \"token\": {\n            \"fingerprint\": \"6b213dd555317487e98dd9214c14edd1\",\n            \"value\": \"pmt_890819b446608ccffbe27e3ec563b538\"\n        },\n        \"type\": \"card\"\n    },\n    \"pspData\": {\n        \"name\": \"UnionPay\"\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "capture": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "0da19e3ceef04f4cbdcd3fc3056a580a"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:46:17Z"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772377604"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:46:17+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:46:17+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Success"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "a2a6faae079d4222bdb3e7ef09190c16"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:45:58Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "T10812162877"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772377604"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:46:17+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79420
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:45:57+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Captured"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "621094"
                            },
                            "fundingType": {
                              "type": "string",
                              "example": "debit"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "0027"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "UnionPay"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "fingerprint": {
                              "type": "string",
                              "example": "6b213dd555317487e98dd9214c14edd1"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_890819b446608ccffbe27e3ec563b538"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "card"
                        }
                      }
                    },
                    "pspData": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UnionPay"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/g2/v0/payment/mer/{sid}/evo.e-commerce.refund": {
      "post": {
        "summary": "/refund",
        "description": "Call this API to create a refund transaction.",
        "operationId": "refund_post",
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          },
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of Payment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "merchantTransInfo",
                  "transAmount"
                ],
                "properties": {
                  "merchantTransInfo": {
                    "type": "object",
                    "description": "The order information.",
                    "required": [
                      "merchantTransID",
                      "merchantTransTime"
                    ],
                    "properties": {
                      "merchantTransID": {
                        "type": "string",
                        "description": "The Merchant Order Number. Should be unique in a store. Max for 32."
                      },
                      "merchantOrderReference": {
                        "type": "string",
                        "description": "The Merchant Order Reference Number. No need to verify uniqueness. Max for 32."
                      },
                      "merchantTransTime": {
                        "type": "string",
                        "description": "Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00.",
                        "format": "date"
                      }
                    }
                  },
                  "transAmount": {
                    "type": "object",
                    "description": "The transaction amount.",
                    "required": [
                      "currency",
                      "value"
                    ],
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The currency. The three-character currency code as defined in ISO-4217. For example : CNY."
                      },
                      "value": {
                        "type": "string",
                        "description": "The amount with major unit. Max for 12."
                      },
                      "transportValue": {
                        "type": "string",
                        "description": "Logistics costs, only RMB. WeChat open orders must be sent for customs declaration. Only used in /customsClearance."
                      },
                      "productValue": {
                        "type": "string",
                        "description": "Commodity cost, only supports RMB. WeChat open orders must be sent for customs declaration.Only used in /customsClearance."
                      }
                    }
                  },
                  "initiatingReason": {
                    "type": "string",
                    "description": "To state the initiating reason of the transaction. Max for 64."
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "The remark information. Max for 512."
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "merchantTransInfo": {
                      "merchantTransID": "T108121628772576721",
                      "merchantTransTime": "2021-08-12T20:49:36+08:00"
                    },
                    "transAmount": {
                      "currency": "THB",
                      "value": "10.0"
                    },
                    "transInitiator": {
                      "platform": "WEB"
                    },
                    "metadata": "Your metadata",
                    "webhook": "https://64012512-b819-46d5-80ee-bebd40cc3806.mock.pstmn.io"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"merchantTransInfo\": {\n        \"merchantTransTime\": \"2021-08-12T20:49:36+08:00\"\n    },\n    \"metadata\": \"Your metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"f1241e5b69024c0aa17a34be76ef8e25\",\n            \"evoTransTime\": \"2021-08-12T12:49:17Z\",\n            \"retrievalReferenceNum\": \"210812194924\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772557696\",\n            \"merchantTransTime\": \"2021-08-12T20:49:17+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079421\",\n            \"pspTransTime\": \"2021-08-12T20:49:17+08:00\"\n        },\n        \"status\": \"Refunded\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.00\"\n        }\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"621094\",\n            \"last4No\": \"0027\",\n            \"paymentBrand\": \"UnionPay\"\n        },\n        \"token\": {\n            \"fingerprint\": \"532fe67b659f45b4824baa699bd40b7c\",\n            \"value\": \"pmt_7001efaba8f96669d2559ae6335b31e5\"\n        },\n        \"type\": \"card\"\n    },\n    \"pspData\": {\n        \"name\": \"UnionPay\"\n    },\n    \"refund\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"00840d74abb74bb5b6a3eff74815ef9e\",\n            \"evoTransTime\": \"2021-08-12T19:49:37+07:00\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772576721\",\n            \"merchantTransTime\": \"2021-08-12T20:49:36+08:00\"\n        },\n        \"status\": \"Success\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\",\n        \"pspMessage\": \"Approved\",\n        \"pspResponseCode\": \"00\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "merchantTransInfo": {
                      "type": "object",
                      "properties": {
                        "merchantTransTime": {
                          "type": "string",
                          "example": "2021-08-12T20:49:36+08:00"
                        }
                      }
                    },
                    "metadata": {
                      "type": "string",
                      "example": "Your metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "f1241e5b69024c0aa17a34be76ef8e25"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:49:17Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "210812194924"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772557696"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:49:17+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79421
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:49:17+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Refunded"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.00"
                            }
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "621094"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "0027"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "UnionPay"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "fingerprint": {
                              "type": "string",
                              "example": "532fe67b659f45b4824baa699bd40b7c"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_7001efaba8f96669d2559ae6335b31e5"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "card"
                        }
                      }
                    },
                    "pspData": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UnionPay"
                        }
                      }
                    },
                    "refund": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "00840d74abb74bb5b6a3eff74815ef9e"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T19:49:37+07:00"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772576721"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:49:36+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Success"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        },
                        "pspMessage": {
                          "type": "string",
                          "example": "Approved"
                        },
                        "pspResponseCode": {
                          "type": "string",
                          "example": "00"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "/refund",
        "description": "Call this API to query the refund status of a refund transaction.",
        "operationId": "refund_get",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of Refund.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"metadata\": \"our metadata\",\n    \"payment\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"f1241e5b69024c0aa17a34be76ef8e25\",\n            \"evoTransTime\": \"2021-08-12T12:49:17Z\",\n            \"retrievalReferenceNum\": \"210812194924\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772557696\",\n            \"merchantTransTime\": \"2021-08-12T20:49:17+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"authorizationCode\": \"079421\",\n            \"pspTransTime\": \"2021-08-12T20:49:17+08:00\"\n        },\n        \"status\": \"Refunded\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.00\"\n        }\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"621094\",\n            \"last4No\": \"0027\",\n            \"paymentBrand\": \"UnionPay\"\n        },\n        \"e-wallet\": {\n            \"paymentBrand\": \"UPI\"\n        },\n        \"token\": {\n            \"fingerprint\": \"532fe67b659f45b4824baa699bd40b7c\",\n            \"value\": \"pmt_7001efaba8f96669d2559ae6335b31e5\"\n        },\n        \"type\": \"card\"\n    },\n    \"pspData\": {\n        \"name\": \"UnionPay\"\n    },\n    \"refund\": {\n        \"evoTransInfo\": {\n            \"evoTransID\": \"00840d74abb74bb5b6a3eff74815ef9e\",\n            \"evoTransTime\": \"2021-08-12T12:49:37Z\"\n        },\n        \"merchantTransInfo\": {\n            \"merchantTransID\": \"T108121628772576721\",\n            \"merchantTransTime\": \"2021-08-12T20:49:36+08:00\"\n        },\n        \"pspTransInfo\": {\n            \"pspTransTime\": \"2021-08-12T20:49:36+08:00\"\n        },\n        \"status\": \"Success\",\n        \"transAmount\": {\n            \"currency\": \"THB\",\n            \"value\": \"10.0\"\n        }\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "string",
                      "example": "our metadata"
                    },
                    "payment": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "f1241e5b69024c0aa17a34be76ef8e25"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:49:17Z"
                            },
                            "retrievalReferenceNum": {
                              "type": "string",
                              "example": "210812194924"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772557696"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:49:17+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "authorizationCode": {
                              "type": "string",
                              "example": 79421
                            },
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:49:17+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Refunded"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.00"
                            }
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "621094"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "0027"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "UnionPay"
                            }
                          }
                        },
                        "e-wallet": {
                          "type": "object",
                          "properties": {
                            "paymentBrand": {
                              "type": "string",
                              "example": "UPI"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "fingerprint": {
                              "type": "string",
                              "example": "532fe67b659f45b4824baa699bd40b7c"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_7001efaba8f96669d2559ae6335b31e5"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "card"
                        }
                      }
                    },
                    "pspData": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "UnionPay"
                        }
                      }
                    },
                    "refund": {
                      "type": "object",
                      "properties": {
                        "evoTransInfo": {
                          "type": "object",
                          "properties": {
                            "evoTransID": {
                              "type": "string",
                              "example": "00840d74abb74bb5b6a3eff74815ef9e"
                            },
                            "evoTransTime": {
                              "type": "string",
                              "example": "2021-08-12T12:49:37Z"
                            }
                          }
                        },
                        "merchantTransInfo": {
                          "type": "object",
                          "properties": {
                            "merchantTransID": {
                              "type": "string",
                              "example": "T108121628772576721"
                            },
                            "merchantTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:49:36+08:00"
                            }
                          }
                        },
                        "pspTransInfo": {
                          "type": "object",
                          "properties": {
                            "pspTransTime": {
                              "type": "string",
                              "example": "2021-08-12T20:49:36+08:00"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "Success"
                        },
                        "transAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "THB"
                            },
                            "value": {
                              "type": "string",
                              "example": "10.0"
                            }
                          }
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/}/g2/v0/payment/mer/{sid}/evo.e-commerce.paymentMethod": {
      "put": {
        "summary": "/paymentMethod",
        "description": "Call this API to update a token.",
        "operationId": "paymentmethod_put",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of paymentMethod. Request URL to complete authentication.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "The tokenValue of paymentMethod. Request URL to update token.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentMethod": {
                    "type": "object",
                    "description": "The payment method information. This field must be sent while updating the Token information.",
                    "properties": {
                      "tokenValidDays": {
                        "type": "string",
                        "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                      },
                      "payerReference": {
                        "type": "string",
                        "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                      },
                      "vaultID": {
                        "type": "string",
                        "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                      },
                      "type": {
                        "type": "string",
                        "description": "The payment method type. Enumerated value: 'card', 'e-wallet', 'token'."
                      },
                      "paymentBrand": {
                        "type": "string",
                        "description": "The payment brand. Enumerated value. Alipay: Alipay CN WeChat_Pay: WeChat Pay. Mandatory when paymentMethod=e-wallet"
                      },
                      "planID": {
                        "type": "string",
                        "description": "The auto debit template id. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "subOpenID": {
                        "type": "string",
                        "description": "WeChat pay use ID. Mandatory when paymentBrand=WeChat_Pay"
                      },
                      "authCode": {
                        "type": "string",
                        "description": "The authorization code used when signing a deduction. Max for 64."
                      },
                      "card": {
                        "type": "object",
                        "description": "If Type = 'card', the field is needed to be sent, which means that the paymentMethod to be bound is the card. For PUT /paymentMethod, Usage 1: If you want to update the card information corresponding to the token, you need to send this field Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                        "properties": {
                          "encryptedCardInfo": {
                            "type": "string",
                            "description": "The encrypted card information. It is needed to be spliced into JSON character string with card number, validity period and security code before encryption, and then the character string is encrypted as a whole. Step 1: The spliced json character string: [\"cardNumber\":\"1234123412341234\", \" expiryDate\": \"0724\", \"cvc\":\"123\", \"holderName\":\"Bob\"]. Step 2: Encrypt the character string using the RSA public key of the organization/store level. Step 3: Put the cipher text into this field When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Max for 2048."
                          },
                          "cardInfo": {
                            "type": "object",
                            "description": "Usage 1: The card information structure for transmitting unencrypted text card information. When \">> cardInfo object\" and \">> encryptedCardInfo object\" coexist, the \">> cardInfo object\" shall be used. Usage 2: (For PUT /paymentMethod) Usage 2: Send the security code when used for UnionPay credit card Secureplus enrollment. At this time, the encryptedCardInfo field only needs to be sent to cvc.",
                            "required": [
                              "cardNumber"
                            ],
                            "properties": {
                              "cardNumber": {
                                "type": "string",
                                "description": "The card number. Max for 19."
                              },
                              "expiryDate": {
                                "type": "string",
                                "description": "The validity YYMM. No need to send if UPI debit card transactions. Max for 4."
                              },
                              "cvc": {
                                "type": "string",
                                "description": "The security code. Max for 4."
                              },
                              "holderName": {
                                "type": "string",
                                "description": "The cardholder's name. Max for 50."
                              }
                            }
                          },
                          "tokenize": {
                            "type": "boolean",
                            "description": "Whether to generate token. If the value is true, use the card information and generate the token."
                          },
                          "tokenValidDays": {
                            "type": "string",
                            "description": "The validity of token. Support self-defined token validity period under:0-365, 0 or permanent valid if empty. Max for 3."
                          },
                          "payerReference": {
                            "type": "string",
                            "description": "The Customer ID. Get from the front-end, without strict verification. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The group of the token belonging to. The back-end configuration is under the organization, and the token is unique under the vault. Max for 36."
                          }
                        }
                      },
                      "token": {
                        "type": "object",
                        "description": "If Type = 'token', the field is needed to be sent, which means that the paymentMethod to be bound is the token.",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The token value. Max for 64."
                          },
                          "vaultID": {
                            "type": "string",
                            "description": "The vaultID of the token group. Max for 36."
                          }
                        }
                      },
                      "e-wallet": {
                        "type": "object",
                        "description": "If Type = 'e-wallet', the field is needed to be sent, which means that the paymentMethod to be bound is the e-wallet.",
                        "required": [
                          "paymentBrand"
                        ],
                        "properties": {
                          "paymentBrand": {
                            "type": "string",
                            "description": "The payment brand. Enumerated value. Alipay: Alipay CN AlipayHK: AlipayHK WeChat_Pay: WeChat Pay TrueMoney: TrueMoney TNG: Touch 'n Go GCash: GCash DANA: DANA bKash: bKash Kakao_Pay: Kakao Pay Easypaisa: Easypaisa"
                          },
                          "subOpenID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET or MINI. Max for 64."
                          },
                          "subAppID": {
                            "type": "string",
                            "description": "Mandatory when the e-wallet.paymentBrand = WeChat_Pay, and platform=INWALLET, MINI or APP. Max for 64."
                          }
                        }
                      }
                    }
                  },
                  "authentication": {
                    "type": "object",
                    "description": "The cardholder authentication information. This field must be sent when the POST payment method response is result.code = S0004/S0005/S0006.",
                    "properties": {
                      "action": {
                        "type": "string",
                        "description": "The purpose of the current PUT payment method request. An enumerated value. [ResendSMS]: Mandatory when the front end needs to resend SecurePlus SMS. Max for 50."
                      },
                      "mobilePhone": {
                        "type": "string",
                        "description": "The cardholder mobile number, used for SecurePlus authentication. Max for 16."
                      },
                      "returnUrl": {
                        "type": "string",
                        "description": "The callback address after authentication has completed. Mandatory under 3DS authentication and LSS authentication scenarios. Max for 300."
                      },
                      "lss": {
                        "type": "object",
                        "description": "The LSS authentication information. The authentication result parameters can be submitted directly during payment if you already have.",
                        "properties": {
                          "lssData": {
                            "type": "object",
                            "description": "The LSS authentication data.",
                            "required": [
                              "eci"
                            ],
                            "properties": {
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              },
                              "lsav": {
                                "type": "string",
                                "description": "Mandatory when eci = 83. Max for 32."
                              }
                            }
                          },
                          "encryptedAuthResponse": {
                            "type": "string",
                            "description": "The encrypted authentication message back to the merchant back URL by LSS DS. Max for 2048."
                          }
                        }
                      },
                      "securePlus": {
                        "type": "object",
                        "description": "The secureplus authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                        "properties": {
                          "securePlusData": {
                            "type": "object",
                            "description": "The secureplus authentication data. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "authenticationResultCode",
                              "vcode"
                            ],
                            "properties": {
                              "authenticationResultCode": {
                                "type": "string",
                                "description": "The raw result of the authentication check. Max for 2."
                              },
                              "vcode": {
                                "type": "string",
                                "description": "The verification code received from UPOP. Max for 2048."
                              }
                            }
                          },
                          "smsCode": {
                            "type": "string",
                            "description": "Mandatory when POST payment is answered with result.code = S0004 and action = VerifySMSCode. Max for 6."
                          }
                        }
                      },
                      "threeDS": {
                        "type": "object",
                        "description": "Mandatory when the desired authentication method is 3DS.",
                        "required": [
                          "deviceType"
                        ],
                        "properties": {
                          "authenticationType": {
                            "type": "string",
                            "description": "Expected 3DS authentication mode, below values are acceptable. \"threeDSPage\": 3DS authentication with single page jump; \"threeDSIntegrator\": API integrated 3DS certification. If you don’t send it, the default is \"threeDSPage\""
                          },
                          "deviceType": {
                            "type": "string",
                            "description": "'Web' 'iOS' 'Android'"
                          },
                          "shopperIP": {
                            "type": "string",
                            "description": "The shopper's IP address. Max for 64."
                          },
                          "shopperEmail": {
                            "type": "string",
                            "description": "The shopper‘s email address. Max for 254."
                          },
                          "origin": {
                            "type": "string",
                            "description": "The URL of the page where you are loading the 3D Secure 2 Component from. The origin should not include subdirectories and a trailing slash. You can also get this by opening the browser console and calling window.location.origin. Mandatory if deviceType = Web."
                          },
                          "mpiData": {
                            "type": "object",
                            "description": "The 3DS authentication information. The authentication result parameters can be submitted directly during payment when you already have.",
                            "required": [
                              "cavv",
                              "eci"
                            ],
                            "properties": {
                              "cavv": {
                                "type": "string",
                                "description": "The cavv. Max for 28."
                              },
                              "cavvAlgorithm": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. Max for 1."
                              },
                              "eci": {
                                "type": "string",
                                "description": "The electronic commerce indicator. Max for 2."
                              },
                              "xid": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 1. The transaction identifier in a decoded form assigned by the directory server. Max for 20."
                              },
                              "dsTransID": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. Max for 36."
                              },
                              "threeDSVersion": {
                                "type": "string",
                                "description": "Mandatory for 3D Secure 2. The current version supported is 2.1.0. Max for 10."
                              }
                            }
                          },
                          "redirectData": {
                            "type": "object",
                            "properties": {
                              "pAres": {
                                "type": "string",
                                "description": "The pares data. The issuer bank's authentication page will return this value when the shopper finished the ChallengeShoper process. Mandatory when threeDSFinished=Y in the request message and get response with code = S0005, action = RedirectShopper in POST payment method. Max for 300."
                              },
                              "threeDSComplnd": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with code = S0005 and action = IdentifyShopper."
                              },
                              "threeDSFinished": {
                                "type": "string",
                                "description": "'Y' or 'N'. Mandatory when POST payment is answered with result.code = S0005 and action = RedirectShopper or ChallengeShopper."
                              }
                            }
                          }
                        }
                      },
                      "browserInfo": {
                        "type": "object",
                        "description": "The user browser information for 3DS authentication, which will be passed to HiTRUST.",
                        "required": [
                          "acceptHeader",
                          "colorDepth",
                          "javaEnabled",
                          "language",
                          "screenHeight",
                          "screenWidth",
                          "timeZoneOffset",
                          "userAgent"
                        ],
                        "properties": {
                          "acceptHeader": {
                            "type": "string",
                            "description": "The accept header value of consumer browser. Max for 2048."
                          },
                          "colorDepth": {
                            "type": "string",
                            "description": "The color depth of the shopper's browser, in pixels. Use the screen .colorDepth property of the browser to get the value. Accepted value: 1,4,8,15,16,24,32 or 48 bits. Max for 2."
                          },
                          "javaEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute Java."
                          },
                          "javaScriptEnabled": {
                            "type": "boolean",
                            "description": "A boolean value indicating whether the shopper's browser is able to execute JavaScript. A default 'true' value is assumed if the field is not present."
                          },
                          "language": {
                            "type": "string",
                            "description": "The value that represents the browser language defined in IETF BCP47, returned from the navigator.language property. Examples: NL , FR , US. Max for 8."
                          },
                          "screenHeight": {
                            "type": "string",
                            "description": "The total height of the cardholder's screen in pixels. The value is returned from the screen.height property. Max for 6."
                          },
                          "screenWidth": {
                            "type": "string",
                            "description": "The total width of the cardholder's screen in pixels. The value is returned from the screen.width property. Max for 6."
                          },
                          "timeZoneOffset": {
                            "type": "string",
                            "description": "The time difference between the UTC time and the local time of the cardholder's browser, in minutes. The value is got from the getTimezoneOffset () method. For example: \"-120\". Max for 5."
                          },
                          "userAgent": {
                            "type": "string",
                            "description": "The user agent value of the shopper's browser. Max for 2048."
                          }
                        }
                      },
                      "accountInfo": {
                        "type": "object",
                        "description": "The shopper account information for 3D Secure 2, which will be passed to HiTRUST.",
                        "required": [
                          "country",
                          "houseNumberOrName",
                          "postalCode",
                          "stateOrProvince"
                        ],
                        "properties": {
                          "accountAgeIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this shopper account has been created. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "accountChangeIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's account was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "accountCreationDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's account was created. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDate": {
                            "type": "string",
                            "description": "The datetime when the shopper's password was last changed. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "passwordChangeDateIndicator": {
                            "type": "string",
                            "description": "The indicator when the shopper's password was last changed. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "purchasesLast6Months": {
                            "type": "string",
                            "description": "The number of order purchased in the last 6 months. Max for 12."
                          },
                          "addCardAttemptsDay": {
                            "type": "string",
                            "description": "The number of attempts the shopper has tried to add a card to the account in the last day. Max for 12."
                          },
                          "pastTransactionsDay": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past 24 hours. Max for 12."
                          },
                          "pastTransactionsYear": {
                            "type": "string",
                            "description": "The number of transactions from this shopper in the past year. Max for 12."
                          },
                          "paymentAccountAge": {
                            "type": "string",
                            "description": "The datetime the payment method was added to the shopper's account. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "paymentAccountIndicator": {
                            "type": "string",
                            "description": "The indicator for the length of time since this payment method has been added to the shopper's account. Allowed values: 'notApplicable', 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "deliveryAddressUsageDate": {
                            "type": "string",
                            "description": "The datetime the selected delivery address was last used. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "deliveryAddressUsageIndicator": {
                            "type": "string",
                            "description": "The indicator when this delivery address was last used. Allowed values: 'thisTransaction', 'lessThan30Days', 'from30To60Days' and 'moreThan60Days'."
                          },
                          "suspiciousActivity": {
                            "type": "boolean",
                            "description": "Whether any suspicious activity has been recorded on this account."
                          },
                          "homePhone": {
                            "type": "string",
                            "description": "The shopper's home phone number (including the country code). Max for 16."
                          },
                          "mobilePhone": {
                            "type": "string",
                            "description": "The shopper's mobile phone number (including the country code). Max for 16."
                          },
                          "workPhone": {
                            "type": "string",
                            "description": "The shopper's work phone number (including the country code). Max for 16."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          }
                        }
                      },
                      "deliveryAddress": {
                        "type": "object",
                        "description": "The delivery address. Mandatory if HiTRUST is used as the authentication way.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      },
                      "merchantRiskIndicator": {
                        "type": "object",
                        "description": "The additional risk fields for 3D Secure 2. The name of the street will be passed to HiTRUST. Include this in your request whenever available.",
                        "properties": {
                          "addressMatch": {
                            "type": "boolean",
                            "description": "Whether the chosen delivery address is identical to the billing address."
                          },
                          "deliveryEmail": {
                            "type": "string",
                            "description": "The delivery email address (for digital goods). Max for 256."
                          },
                          "deliveryTimeframe": {
                            "type": "string",
                            "description": "The estimated delivery time for the shopper to receive the goods. Allowed values: 'electronicDelivery', 'sameDayShipping', 'overnightShipping' and 'twoOrMoreDaysShipping'."
                          },
                          "giftCardAmount": {
                            "type": "string",
                            "description": "The amount purchased with a prepaid or gift card. Max for 12."
                          },
                          "giftCardCount": {
                            "type": "string",
                            "description": "The number of individual prepaid or gift cards used for this purchase. Max for 12."
                          },
                          "preOrderDate": {
                            "type": "string",
                            "description": "For pre-order purchases, the expected date this product will be available to the shopper. Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00",
                            "format": "date"
                          },
                          "preOrderPurchase": {
                            "type": "boolean",
                            "description": "Whether this transaction is for pre-ordering a product."
                          },
                          "reorderItems": {
                            "type": "boolean",
                            "description": "Whether the shopper has already purchased the same items in the past."
                          },
                          "deliveryAddressIndicator": {
                            "type": "string",
                            "description": "The indicator regarding to the delivery address. Allowed values: 'shipToBillingAddress', 'shipToVerifiedAddress', 'shipToNewAddress', 'shipToStore', 'digitalGoods', 'goodsNotShipped' and 'other'."
                          }
                        }
                      },
                      "billingAddress": {
                        "type": "object",
                        "description": "The billing address, which will be passed to HiTRUST.",
                        "required": [
                          "houseNumberOrName",
                          "street",
                          "city",
                          "country",
                          "postalCode"
                        ],
                        "properties": {
                          "houseNumberOrName": {
                            "type": "string",
                            "description": "The number or name of the house. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "street": {
                            "type": "string",
                            "description": "The name of the street. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "city": {
                            "type": "string",
                            "description": "The name of the city. Only alphabetic and numeric characters are allowed. Max for 50."
                          },
                          "stateOrProvince": {
                            "type": "string",
                            "description": "The state or province codes as defined in ISO 3166-2. Mandatory for the US and Canada. Only alphabetic and numeric characters are allowed. Max for 3."
                          },
                          "country": {
                            "type": "string",
                            "description": "The three-character country code as defined in ISO-3166-1 alpha-3. For example, CHN."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "The postal code of the address. Only alphabetic and numeric characters are allowed. Max for 16."
                          }
                        }
                      }
                    }
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "The remark information. Max for 512."
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "authentication": {
                      "threeDS": {
                        "redirectData": {
                          "threeDSComplnd": "Y",
                          "threeDSFinished": "Y"
                        },
                        "deviceType": "iOS"
                      },
                      "returnUrl": "http://www.cardinfolink.com"
                    },
                    "webhook": "https://64012512-b819-46d5-80ee-bebd40cc3806.mock.pstmn.io"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"authentication\": {\n        \"authenticationType\": \"CYBS\"\n    },\n    \"paymentMethod\": {\n        \"card\": {\n            \"first6No\": \"601100\",\n            \"fundingType\": \"credit\",\n            \"last4No\": \"1093\",\n            \"paymentBrand\": \"Diners\"\n        },\n        \"token\": {\n            \"createTime\": \"2021-08-12T14:57:49.144Z\",\n            \"fingerprint\": \"d437cceafc3441fb208f91bcda2ac0a4\",\n            \"status\": \"enable\",\n            \"updateTime\": \"2021-08-12T14:57:49Z\",\n            \"value\": \"pmt_98ed586336fbeecde88112ae156e5780\",\n            \"vaultID\": \"20210804\"\n        }\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\",\n        \"pspMessage\": \"approved by Issuer \",\n        \"pspResponseCode\": \"081\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "authentication": {
                      "type": "object",
                      "properties": {
                        "authenticationType": {
                          "type": "string",
                          "example": "CYBS"
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "card": {
                          "type": "object",
                          "properties": {
                            "first6No": {
                              "type": "string",
                              "example": "601100"
                            },
                            "fundingType": {
                              "type": "string",
                              "example": "credit"
                            },
                            "last4No": {
                              "type": "string",
                              "example": "1093"
                            },
                            "paymentBrand": {
                              "type": "string",
                              "example": "Diners"
                            }
                          }
                        },
                        "token": {
                          "type": "object",
                          "properties": {
                            "createTime": {
                              "type": "string",
                              "example": "2021-08-12T14:57:49.144Z"
                            },
                            "fingerprint": {
                              "type": "string",
                              "example": "d437cceafc3441fb208f91bcda2ac0a4"
                            },
                            "status": {
                              "type": "string",
                              "example": "enable"
                            },
                            "updateTime": {
                              "type": "string",
                              "example": "2021-08-12T14:57:49Z"
                            },
                            "value": {
                              "type": "string",
                              "example": "pmt_98ed586336fbeecde88112ae156e5780"
                            },
                            "vaultID": {
                              "type": "string",
                              "example": "20210804"
                            }
                          }
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        },
                        "pspMessage": {
                          "type": "string",
                          "example": "approved by Issuer "
                        },
                        "pspResponseCode": {
                          "type": "string",
                          "example": 81
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/g2/v0/payment/mer/{sid}/evo.e-commerce.customsClearance": {
      "post": {
        "summary": "/customerClearance",
        "description": "",
        "operationId": "customerclearance_post",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of Payment.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "customsClearance",
                  "customsData"
                ],
                "properties": {
                  "customsClearance": {
                    "type": "object",
                    "description": "The customs Clearance information.",
                    "properties": {
                      "merchantClearanceInfo": {
                        "type": "object",
                        "description": "The merchant clearance information.",
                        "required": [
                          "clearanceID"
                        ],
                        "properties": {
                          "clearanceID": {
                            "type": "string",
                            "description": "The merchant-generated customs declaration order number. Max for 32."
                          },
                          "isSplit": {
                            "type": "boolean",
                            "description": "The merchant controls whether this order is split for customs declaration. T: split order F/empty: non-split order."
                          },
                          "subClearanceID": {
                            "type": "string",
                            "description": "The merchant sub-order number. Mandatory when the order is splited, otherwise an error will be occured. Max for 32."
                          }
                        }
                      },
                      "customsClearanceAmount": {
                        "type": "object",
                        "description": "The customs clearance amount.",
                        "required": [
                          "currency",
                          "value"
                        ],
                        "properties": {
                          "currency": {
                            "type": "string",
                            "description": "The currency. The three-character currency code as defined in ISO-4217. For example : CNY."
                          },
                          "value": {
                            "type": "string",
                            "description": "The amount with major unit. Max for 12."
                          },
                          "transportValue": {
                            "type": "string",
                            "description": "Logistics costs, only RMB. WeChat open orders must be sent for customs declaration. Only used in /customsClearance."
                          },
                          "productValue": {
                            "type": "string",
                            "description": "Commodity cost, only supports RMB. WeChat open orders must be sent for customs declaration.Only used in /customsClearance."
                          }
                        }
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Request type ADD: New customs declaration application MODIFY: modify customs declaration application."
                      }
                    }
                  },
                  "customsData": {
                    "type": "object",
                    "description": "The customs data.",
                    "required": [
                      "customsID"
                    ],
                    "properties": {
                      "customsID": {
                        "type": "string",
                        "description": "The Customs ID. Max for 20."
                      },
                      "merchantCustomsID": {
                        "type": "string",
                        "description": "The merchant's record number registered in the customs. Max for 64."
                      },
                      "merchantCustomsName": {
                        "type": "string",
                        "description": "The name of the merchant registered in the customs. The original transaction is Alipay, which must be sent at the time of customs declaration. Max for 64."
                      }
                    }
                  },
                  "buyerInfo": {
                    "type": "object",
                    "description": "The buyer information.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The buyer's name, which can be the name information left by the buyer at the merchant. Max for 64."
                      },
                      "certificateType": {
                        "type": "string",
                        "description": "The type of document. Enumerated value: 'IdCard', 'MilitaryId', 'Passport', 'HongKongAndMacaoPass', 'TaiwanPass', 'PoliceIdCard', 'SoldiersCard' and 'Others' (Alipay currently only supports IdCard)."
                      },
                      "number": {
                        "type": "string",
                        "description": "The ID number. Max for 64."
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "customsClearance": {
                      "actionType": "ADD",
                      "merchantClearanceInfo": {
                        "clearanceID": "C106291624967644637"
                      },
                      "customsClearanceAmount": {
                        "currency": "CNY",
                        "value": "0.35"
                      }
                    },
                    "customsData": {
                      "customsID": "NINGBO",
                      "merchantCustomsID": "C107051625457853848"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"buyerInfo\": {\n        \"identityCheck\": false\n    },\n    \"customsClearance\": {\n        \"customsClearanceAmount\": {\n            \"currency\": \"CNY\",\n            \"productValue\": \"0.3\",\n            \"transportValue\": \"0.05\",\n            \"value\": \"0.35\"\n        },\n        \"merchantClearanceInfo\": {\n            \"ClearanceID\": \"C106291624967644637\",\n            \"isSplit\": true,\n            \"subClearanceID\": \"C10629162496764463701\"\n        },\n        \"pspClearanceInfo\": {\n            \"pspClearanceID\": \"4200001235202106297730653419\"\n        },\n        \"status\": \"SUCCESS\"\n    },\n    \"customsData\": {\n        \"customsID\": \"NINGBO\",\n        \"customsReturnMessage\": \"0|ok\"\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "buyerInfo": {
                      "type": "object",
                      "properties": {
                        "identityCheck": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    },
                    "customsClearance": {
                      "type": "object",
                      "properties": {
                        "customsClearanceAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "CNY"
                            },
                            "productValue": {
                              "type": "string",
                              "example": "0.3"
                            },
                            "transportValue": {
                              "type": "string",
                              "example": "0.05"
                            },
                            "value": {
                              "type": "string",
                              "example": "0.35"
                            }
                          }
                        },
                        "merchantClearanceInfo": {
                          "type": "object",
                          "properties": {
                            "ClearanceID": {
                              "type": "string",
                              "example": "C106291624967644637"
                            },
                            "isSplit": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "subClearanceID": {
                              "type": "string",
                              "example": "C10629162496764463701"
                            }
                          }
                        },
                        "pspClearanceInfo": {
                          "type": "object",
                          "properties": {
                            "pspClearanceID": {
                              "type": "string",
                              "example": "4200001235202106297730653419"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "SUCCESS"
                        }
                      }
                    },
                    "customsData": {
                      "type": "object",
                      "properties": {
                        "customsID": {
                          "type": "string",
                          "example": "NINGBO"
                        },
                        "customsReturnMessage": {
                          "type": "string",
                          "example": "0|ok"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "/customerClearance",
        "description": "",
        "operationId": "customerclearance_get",
        "parameters": [
          {
            "name": "clearanceID",
            "in": "query",
            "description": "The clearanceID of customsClearance.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sid",
            "in": "path",
            "description": "EVO Cloud assigned store number, unique identifier for store.",
            "schema": {
              "type": "string",
              "default": "S000001"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"buyerInfo\": {\n        \"identityCheck\": false\n    },\n    \"customsClearance\": {\n        \"customsClearanceAmount\": {\n            \"currency\": \"CNY\",\n            \"productValue\": \"0.3\",\n            \"transportValue\": \"0.05\",\n            \"value\": \"0.35\"\n        },\n        \"merchantClearanceInfo\": {\n            \"ClearanceID\": \"C106291624967644637\",\n            \"isSplit\": true,\n            \"subClearanceID\": \"C10629162496764463701\"\n        },\n        \"pspClearanceInfo\": {\n            \"pspClearanceID\": \"4200001235202106297730653419\"\n        },\n        \"status\": \"SUCCESS\"\n    },\n    \"customsData\": {\n        \"customsID\": \"NINGBO\",\n        \"customsReturnMessage\": \"0|ok\"\n    },\n    \"result\": {\n        \"code\": \"S0000\",\n        \"message\": \"success\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "buyerInfo": {
                      "type": "object",
                      "properties": {
                        "identityCheck": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    },
                    "customsClearance": {
                      "type": "object",
                      "properties": {
                        "customsClearanceAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "CNY"
                            },
                            "productValue": {
                              "type": "string",
                              "example": "0.3"
                            },
                            "transportValue": {
                              "type": "string",
                              "example": "0.05"
                            },
                            "value": {
                              "type": "string",
                              "example": "0.35"
                            }
                          }
                        },
                        "merchantClearanceInfo": {
                          "type": "object",
                          "properties": {
                            "ClearanceID": {
                              "type": "string",
                              "example": "C106291624967644637"
                            },
                            "isSplit": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "subClearanceID": {
                              "type": "string",
                              "example": "C10629162496764463701"
                            }
                          }
                        },
                        "pspClearanceInfo": {
                          "type": "object",
                          "properties": {
                            "pspClearanceID": {
                              "type": "string",
                              "example": "4200001235202106297730653419"
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "example": "SUCCESS"
                        }
                      }
                    },
                    "customsData": {
                      "type": "object",
                      "properties": {
                        "customsID": {
                          "type": "string",
                          "example": "NINGBO"
                        },
                        "customsReturnMessage": {
                          "type": "string",
                          "example": "0|ok"
                        }
                      }
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "S0000"
                        },
                        "message": {
                          "type": "string",
                          "example": "success"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/g2/v0/payment/mer/{sid}/evo.e-commerce.placeorder": {
      "post": {
        "summary": "/placeOrder",
        "description": "",
        "operationId": "placeorder_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "merchantTransInfo",
                  "transAmount"
                ],
                "properties": {
                  "validTime": {
                    "type": "string",
                    "description": "The effective time of the order's allowable payment, in minutes. The minimum is 5 minutes, the maximum is 60 minutes, and the default is 60 minutes."
                  },
                  "merchantTransInfo": {
                    "type": "object",
                    "description": "The order information.",
                    "required": [
                      "merchantTransID",
                      "merchantTransTime"
                    ],
                    "properties": {
                      "merchantTransID": {
                        "type": "string",
                        "description": "The Merchant Order Number. Should be unique in a store. Max for 32."
                      },
                      "merchantOrderReference": {
                        "type": "string",
                        "description": "The Merchant Order Reference Number. No need to verify uniqueness. Max for 32."
                      },
                      "merchantTransTime": {
                        "type": "string",
                        "description": "Format: ISO 8601 YYYY-MM-DDThh:mm:ssTZD Sample: 2017-07-17T13:42:40+01:00.",
                        "format": "date"
                      }
                    }
                  },
                  "transAmount": {
                    "type": "object",
                    "description": "The transaction amount.",
                    "required": [
                      "currency",
                      "value"
                    ],
                    "properties": {
                      "currency": {
                        "type": "string",
                        "description": "The currency. The three-character currency code as defined in ISO-4217. For example : CNY."
                      },
                      "value": {
                        "type": "string",
                        "description": "The amount with major unit. Max for 12."
                      },
                      "transportValue": {
                        "type": "string",
                        "description": "Logistics costs, only RMB. WeChat open orders must be sent for customs declaration. Only used in /customsClearance."
                      },
                      "productValue": {
                        "type": "string",
                        "description": "Commodity cost, only supports RMB. WeChat open orders must be sent for customs declaration.Only used in /customsClearance."
                      }
                    }
                  },
                  "tradeInfo": {
                    "type": "object",
                    "description": "The trade information.",
                    "required": [
                      "tradeType"
                    ],
                    "properties": {
                      "tradeType": {
                        "type": "string",
                        "description": "The trade type. Below 4 types are supported: Hotel/Airline/Sale of goods/0thers. For example : Hotel."
                      },
                      "hotelName": {
                        "type": "string",
                        "description": "The hotel name. Mandatory when tradeType is Hotel. Max for 128."
                      },
                      "checkInTime": {
                        "type": "string",
                        "description": "The check-in time. The transaction time submitted by the merchant. Format: RFC3339. Mandatory when tradeType is Hotel. For example :2006-01-02T15:04:05+07:00.",
                        "format": "date"
                      },
                      "checkOutTime": {
                        "type": "string",
                        "description": "The check-out time. The transaction time submitted by the merchant. Format: RFC3339. Mandatory when tradeType is Hotel. For example :2006-01-02T15:04:05+07:00.",
                        "format": "date"
                      },
                      "flightNumber": {
                        "type": "string",
                        "description": "The flight number. Mandatory when tradeType is Airline. If multiple parameters are sent, separate them with commas. For example: CZ689,MU5910. Max for 30."
                      },
                      "departureTime": {
                        "type": "string",
                        "description": "The departure time. The transaction time submitted by the merchant. Format: RFC3339. Mandatory when tradeType is Airline. For example: 2006-01-02T15:04:05+07:00.",
                        "format": "date"
                      },
                      "goodsName": {
                        "type": "string",
                        "description": "The name of the goods. Mandatory when tradeType is Sale of goods. For example: iPhone XR. Max for 128."
                      },
                      "goodsDescription": {
                        "type": "string",
                        "description": "The description of the goods. If multiple parameters are sent, separate them with commas. Mandatory when tradeType is Sale of goods. For example: iPhone XR 512G Gold,iPad 12.9 256G. Max for 256."
                      },
                      "totalQuantity": {
                        "type": "integer",
                        "description": "The total quantities of all goods in one order. Mandatory when tradeType is Sale of goods. Value range is 1-99.  For Example: 2. Max for 2.",
                        "format": "int32"
                      }
                    }
                  },
                  "webhook": {
                    "type": "string",
                    "description": "The asynchronous notification address. After the transaction is successfully processed in the backend, a notification will be pushed to this address. Max for 300."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "/placeOrder",
        "description": "",
        "operationId": "placeorder_get",
        "parameters": [
          {
            "name": "merchantTransID",
            "in": "query",
            "description": "The merchantTransID of merchant.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": [
      {
        "_id": "61134751ef81e5026d648234",
        "key": "Content-Type",
        "value": "application/json"
      },
      {
        "_id": "611379e1b15c83001c36b0d3",
        "key": "Authorization",
        "value": "f56eef31c8491b69ca546ce7bd5390b6b87ad012d4d84743a0aa7ce252f611c8"
      },
      {
        "_id": "611379e1b15c83001c36b0d2",
        "key": "MsgID",
        "value": "M202105261621994905501"
      },
      {
        "_id": "611379e1b15c83001c36b0d1",
        "key": "DateTime",
        "value": "20210526100825+0800"
      },
      {
        "_id": "611379e1b15c83001c36b0d0",
        "key": "SignType",
        "value": "SHA256"
      }
    ],
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}